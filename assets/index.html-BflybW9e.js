import{_ as d,c as k,a as s,d as i,e as l,w as e,b as n,r,o as m}from"./app-DLF1zsiw.js";const v={},b={class:"table-of-contents"};function E(y,a){const o=r("router-link"),c=r("CodeTabs"),u=r("Tip");return m(),k("div",null,[a[57]||(a[57]=s("h1",{id:"pl-sql",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#pl-sql"},[s("span",null,"PL/SQL")])],-1)),s("nav",b,[s("ul",null,[s("li",null,[l(o,{to:"#基本结构"},{default:e(()=>a[0]||(a[0]=[n("基本结构")])),_:1,__:[0]})]),s("li",null,[l(o,{to:"#变量与数据类型"},{default:e(()=>a[1]||(a[1]=[n("变量与数据类型")])),_:1,__:[1]})]),s("li",null,[l(o,{to:"#流程控制"},{default:e(()=>a[2]||(a[2]=[n("流程控制")])),_:1,__:[2]}),s("ul",null,[s("li",null,[l(o,{to:"#条件判断-if-then-else"},{default:e(()=>a[3]||(a[3]=[n("条件判断（IF-THEN-ELSE）")])),_:1,__:[3]})]),s("li",null,[l(o,{to:"#循环-loop、for、while"},{default:e(()=>a[4]||(a[4]=[n("循环（LOOP、FOR、WHILE）")])),_:1,__:[4]})])])]),s("li",null,[l(o,{to:"#异常处理"},{default:e(()=>a[5]||(a[5]=[n("异常处理")])),_:1,__:[5]})]),s("li",null,[l(o,{to:"#存储过程"},{default:e(()=>a[6]||(a[6]=[n("存储过程")])),_:1,__:[6]})]),s("li",null,[l(o,{to:"#函数"},{default:e(()=>a[7]||(a[7]=[n("函数")])),_:1,__:[7]})]),s("li",null,[l(o,{to:"#触发器"},{default:e(()=>a[8]||(a[8]=[n("触发器")])),_:1,__:[8]})]),s("li",null,[l(o,{to:"#游标"},{default:e(()=>a[9]||(a[9]=[n("游标")])),_:1,__:[9]}),s("ul",null,[s("li",null,[l(o,{to:"#显示游标"},{default:e(()=>a[10]||(a[10]=[n("显示游标")])),_:1,__:[10]})]),s("li",null,[l(o,{to:"#隐式游标"},{default:e(()=>a[11]||(a[11]=[n("隐式游标")])),_:1,__:[11]})])])]),s("li",null,[l(o,{to:"#语法对比"},{default:e(()=>a[12]||(a[12]=[n("语法对比")])),_:1,__:[12]}),s("ul",null,[s("li",null,[l(o,{to:"#声明语法对比"},{default:e(()=>a[13]||(a[13]=[n("声明语法对比")])),_:1,__:[13]})]),s("li",null,[l(o,{to:"#创建语法对比"},{default:e(()=>a[14]||(a[14]=[n("创建语法对比")])),_:1,__:[14]})])])]),s("li",null,[l(o,{to:"#关键字"},{default:e(()=>a[15]||(a[15]=[n("关键字")])),_:1,__:[15]})])])]),a[58]||(a[58]=i('<p>PL/SQL（Procedural Language extensions to SQL）是 Oracle 数据库的过程化编程语言，它扩展了 SQL，使其支持：</p><ul><li>变量、条件判断、循环（过程化编程）</li><li>异常处理（错误管理）</li><li>存储过程、函数、触发器（模块化编程）</li><li>游标（逐行处理查询结果）</li></ul><h2 id="基本结构" tabindex="-1"><a class="header-anchor" href="#基本结构"><span>基本结构</span></a></h2><p>PL/SQL 代码由 块（Block） 组成，分为：</p><ul><li>匿名块（临时执行）</li><li>命名块（存储过程、函数等）</li></ul><p>匿名块的语法如下：</p>',6)),l(c,{id:"52",data:[{id:"基本语法"},{id:"示例"}]},{title0:e(({value:t,isActive:p})=>a[16]||(a[16]=[n("基本语法")])),title1:e(({value:t,isActive:p})=>a[17]||(a[17]=[n("示例")])),tab0:e(({value:t,isActive:p})=>a[18]||(a[18]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token punctuation"},"["),s("span",{class:"token keyword"},"DECLARE"),s("span",{class:"token punctuation"},"]")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"-- 变量、记录类型、游标、异常声明等（可选）")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"BEGIN")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"-- 执行逻辑")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},"["),n("EXCEPTION"),s("span",{class:"token punctuation"},"]")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token comment"},"-- 异常处理（可选）")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"END"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:p})=>a[19]||(a[19]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DECLARE")]),n(`
`),s("span",{class:"line"},[n("    v_name VARCHAR2"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},")"),n(" :"),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},"'Alice'"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    v_age NUMBER :"),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"30"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"BEGIN")]),n(`
`),s("span",{class:"line"},[n("    DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'Name: '"),n(),s("span",{class:"token operator"},"||"),n(" v_name "),s("span",{class:"token operator"},"||"),n(),s("span",{class:"token string"},"', Age: '"),n(),s("span",{class:"token operator"},"||"),n(" v_age"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"EXCEPTION"),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"WHEN"),n(" OTHERS "),s("span",{class:"token keyword"},"THEN")]),n(`
`),s("span",{class:"line"},[n("        DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'Error: '"),n(),s("span",{class:"token operator"},"||"),n(" SQLERRM"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"END"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),a[59]||(a[59]=i('<h2 id="变量与数据类型" tabindex="-1"><a class="header-anchor" href="#变量与数据类型"><span>变量与数据类型</span></a></h2><p>PL/SQL 支持以下数据类型：</p><ul><li>标准数据类型：NUMBER、VARCHAR2、DATE、BOOLEAN等</li><li>动态引用列类型 <ul><li>%TYPE 动态引用列类型</li><li>%ROWTYPE 动态引用记录类型（整行）</li></ul></li><li>自定义数据类型：<code>TYPE type_name IS RECORD (col1 datatype1, col2 datatype2,...)</code></li></ul>',3)),l(c,{id:"95",data:[{id:"标准数据类型"},{id:"动态引用类型"},{id:"自定义记录类型"}]},{title0:e(({value:t,isActive:p})=>a[20]||(a[20]=[n("标准数据类型")])),title1:e(({value:t,isActive:p})=>a[21]||(a[21]=[n("动态引用类型")])),title2:e(({value:t,isActive:p})=>a[22]||(a[22]=[n("自定义记录类型")])),tab0:e(({value:t,isActive:p})=>a[23]||(a[23]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DECLARE")]),n(`
`),s("span",{class:"line"},[n("    v_name VARCHAR2"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"20"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    v_salary NUMBER"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"10"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"BEGIN")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"SELECT"),n("  name"),s("span",{class:"token punctuation"},","),n(" salary "),s("span",{class:"token keyword"},"INTO"),n(" v_name"),s("span",{class:"token punctuation"},","),n(" v_salary")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"FROM"),n(" employees "),s("span",{class:"token keyword"},"WHERE"),n(" id "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),n("v_name "),s("span",{class:"token operator"},"||"),n(),s("span",{class:"token string"},"' earns '"),n(),s("span",{class:"token operator"},"||"),n(" v_salary"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"END"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:p})=>a[24]||(a[24]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DECLARE")]),n(`
`),s("span",{class:"line"},[n("    v_name employees"),s("span",{class:"token punctuation"},"."),n("name"),s("span",{class:"token operator"},"%"),s("span",{class:"token keyword"},"TYPE"),s("span",{class:"token punctuation"},";"),n("     "),s("span",{class:"token comment"},"-- 使用 %TYPE 引用 employees 表的 name 列类型")]),n(`
`),s("span",{class:"line"},[n("    v_salary employees"),s("span",{class:"token punctuation"},"."),n("salary"),s("span",{class:"token operator"},"%"),s("span",{class:"token keyword"},"TYPE"),s("span",{class:"token punctuation"},";"),n("     "),s("span",{class:"token comment"},"-- 使用 %TYPE 引用 employees 表的 salary 列类型")]),n(`
`),s("span",{class:"line"},[n("    v_emp employees"),s("span",{class:"token operator"},"%"),n("ROWTYPE"),s("span",{class:"token punctuation"},";"),n("        "),s("span",{class:"token comment"},"-- 使用 %ROWTYPE 引用 employees 表的记录类型（所有列）")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"BEGIN")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"SELECT"),n(" name"),s("span",{class:"token punctuation"},","),n(" salary "),s("span",{class:"token keyword"},"INTO"),n(" v_name"),s("span",{class:"token punctuation"},","),n(" v_salary")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"FROM"),n(" employees "),s("span",{class:"token keyword"},"WHERE"),n(" id "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),n("v_name "),s("span",{class:"token operator"},"||"),n(),s("span",{class:"token string"},"' earns '"),n(),s("span",{class:"token operator"},"||"),n(" v_salary"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"SELECT"),n(),s("span",{class:"token operator"},"*"),n(),s("span",{class:"token keyword"},"INTO"),n(" v_emp "),s("span",{class:"token keyword"},"FROM"),n(" employees "),s("span",{class:"token keyword"},"WHERE"),n(" id "),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),n("v_emp"),s("span",{class:"token punctuation"},"."),n("name "),s("span",{class:"token operator"},"||"),n(),s("span",{class:"token string"},"' works in '"),n(),s("span",{class:"token operator"},"||"),n(" v_emp"),s("span",{class:"token punctuation"},"."),n("department_id"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"END"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:e(({value:t,isActive:p})=>a[25]||(a[25]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"DECLARE")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"TYPE"),n(" t_emp_record "),s("span",{class:"token operator"},"IS"),n(" RECORD "),s("span",{class:"token punctuation"},"(")]),n(`
`),s("span",{class:"line"},[n("        emp_id   employees"),s("span",{class:"token punctuation"},"."),n("employee_id"),s("span",{class:"token operator"},"%"),s("span",{class:"token keyword"},"TYPE"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        emp_name VARCHAR2"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("        salary   NUMBER"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"10"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"2"),s("span",{class:"token punctuation"},")")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    r_emp t_emp_record"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"BEGIN")]),n(`
`),s("span",{class:"line"},[n("    r_emp"),s("span",{class:"token punctuation"},"."),n("emp_id :"),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    r_emp"),s("span",{class:"token punctuation"},"."),n("emp_name :"),s("span",{class:"token operator"},"="),n(),s("span",{class:"token string"},"'John Doe'"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    r_emp"),s("span",{class:"token punctuation"},"."),n("salary :"),s("span",{class:"token operator"},"="),n(),s("span",{class:"token number"},"5000"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),n("r_emp"),s("span",{class:"token punctuation"},"."),n("emp_name "),s("span",{class:"token operator"},"||"),n(),s("span",{class:"token string"},"' has ID '"),n(),s("span",{class:"token operator"},"||"),n(" r_emp"),s("span",{class:"token punctuation"},"."),n("emp_id"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"END"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),a[60]||(a[60]=i(`<h2 id="流程控制" tabindex="-1"><a class="header-anchor" href="#流程控制"><span>流程控制</span></a></h2><h3 id="条件判断-if-then-else" tabindex="-1"><a class="header-anchor" href="#条件判断-if-then-else"><span>条件判断（IF-THEN-ELSE）</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">DECLARE</span></span>
<span class="line">    v_score NUMBER :<span class="token operator">=</span> <span class="token number">85</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">IF</span> v_score <span class="token operator">&gt;=</span> <span class="token number">90</span> <span class="token keyword">THEN</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    ELSIF v_score <span class="token operator">&gt;=</span> <span class="token number">80</span> <span class="token keyword">THEN</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;B&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">ELSE</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;C&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="循环-loop、for、while" tabindex="-1"><a class="header-anchor" href="#循环-loop、for、while"><span>循环（LOOP、FOR、WHILE）</span></a></h3><h4 id="基本loop" tabindex="-1"><a class="header-anchor" href="#基本loop"><span>基本LOOP</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">DECLARE</span></span>
<span class="line">    v_count NUMBER :<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">LOOP</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;Count: &#39;</span> <span class="token operator">||</span> v_count<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        v_count :<span class="token operator">=</span> v_count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">EXIT</span> <span class="token keyword">WHEN</span> v_count <span class="token operator">&gt;</span> <span class="token number">5</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">LOOP</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="for循环" tabindex="-1"><a class="header-anchor" href="#for循环"><span>FOR循环</span></a></h4>`,7)),l(c,{id:"123",data:[{id:"简单FOR循环"},{id:"查询结果FOR循环（隐式游标）"}]},{title0:e(({value:t,isActive:p})=>a[26]||(a[26]=[n("简单FOR循环")])),title1:e(({value:t,isActive:p})=>a[27]||(a[27]=[n("查询结果FOR循环（隐式游标）")])),tab0:e(({value:t,isActive:p})=>a[28]||(a[28]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"BEGIN")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"FOR"),n(" i "),s("span",{class:"token operator"},"IN"),n(),s("span",{class:"token number"},"1."),s("span",{class:"token number"},".5"),n(),s("span",{class:"token keyword"},"LOOP")]),n(`
`),s("span",{class:"line"},[n("        DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'Iteration: '"),n(),s("span",{class:"token operator"},"||"),n(" i"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"END"),n(),s("span",{class:"token keyword"},"LOOP"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"END"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:p})=>a[29]||(a[29]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"BEGIN")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"FOR"),n(" emp_rec "),s("span",{class:"token operator"},"IN"),n(),s("span",{class:"token punctuation"},"("),s("span",{class:"token keyword"},"SELECT"),n(),s("span",{class:"token operator"},"*"),n(),s("span",{class:"token keyword"},"FROM"),n(" employees"),s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"LOOP")]),n(`
`),s("span",{class:"line"},[n("        DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),n("emp_rec"),s("span",{class:"token punctuation"},"."),n("employee_name"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"END"),n(),s("span",{class:"token keyword"},"LOOP"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"END"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),a[61]||(a[61]=i(`<h4 id="while循环" tabindex="-1"><a class="header-anchor" href="#while循环"><span>WHILE循环</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">DECLARE</span></span>
<span class="line">    v_count NUMBER :<span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">WHILE</span> v_count <span class="token operator">&lt;=</span> <span class="token number">5</span> <span class="token keyword">LOOP</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;Count: &#39;</span> <span class="token operator">||</span> v_count<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        v_count :<span class="token operator">=</span> v_count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">LOOP</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="异常处理" tabindex="-1"><a class="header-anchor" href="#异常处理"><span>异常处理</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">DECLARE</span></span>
<span class="line">    v_divisor NUMBER :<span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line">    v_result NUMBER<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    v_result :<span class="token operator">=</span> <span class="token number">100</span> <span class="token operator">/</span> v_divisor<span class="token punctuation">;</span> <span class="token comment">-- 会触发 ZERO_DIVIDE 异常</span></span>
<span class="line">EXCEPTION</span>
<span class="line">    <span class="token keyword">WHEN</span> ZERO_DIVIDE <span class="token keyword">THEN</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;Error: Division by zero&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">WHEN</span> OTHERS <span class="token keyword">THEN</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span><span class="token string">&#39;Unknown error: &#39;</span> <span class="token operator">||</span> SQLERRM<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="存储过程" tabindex="-1"><a class="header-anchor" href="#存储过程"><span>存储过程</span></a></h2>`,5)),l(c,{id:"142",data:[{id:"定义存储过程"},{id:"使用存储过程"}]},{title0:e(({value:t,isActive:p})=>a[30]||(a[30]=[n("定义存储过程")])),title1:e(({value:t,isActive:p})=>a[31]||(a[31]=[n("使用存储过程")])),tab0:e(({value:t,isActive:p})=>a[32]||(a[32]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"CREATE"),n(),s("span",{class:"token operator"},"OR"),n(),s("span",{class:"token keyword"},"REPLACE"),n(),s("span",{class:"token keyword"},"PROCEDURE"),n(" raise_salary "),s("span",{class:"token punctuation"},"(")]),n(`
`),s("span",{class:"line"},[n("    p_emp_id "),s("span",{class:"token operator"},"IN"),n(" NUMBER"),s("span",{class:"token punctuation"},",")]),n(`
`),s("span",{class:"line"},[n("    p_amount "),s("span",{class:"token operator"},"IN"),n(" NUMBER")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token punctuation"},")"),n(),s("span",{class:"token keyword"},"AS")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"BEGIN")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"UPDATE"),n(" employees "),s("span",{class:"token keyword"},"SET"),n(" salary "),s("span",{class:"token operator"},"="),n(" salary "),s("span",{class:"token operator"},"+"),n(" p_amount")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"WHERE"),n(" employee_id "),s("span",{class:"token operator"},"="),n(" p_emp_id"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"COMMIT"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},"EXCEPTION"),n(`
`),s("span",{class:"line"},[n("    "),s("span",{class:"token keyword"},"WHEN"),n(" OTHERS "),s("span",{class:"token keyword"},"THEN")]),n(`
`),s("span",{class:"line"},[n("        "),s("span",{class:"token keyword"},"ROLLBACK"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[n("        DBMS_OUTPUT"),s("span",{class:"token punctuation"},"."),n("PUT_LINE"),s("span",{class:"token punctuation"},"("),s("span",{class:"token string"},"'Error: '"),n(),s("span",{class:"token operator"},"||"),n(" SQLERRM"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"},[s("span",{class:"token keyword"},"END"),n(" raise_salary"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:e(({value:t,isActive:p})=>a[33]||(a[33]=[s("div",{class:"language-sql line-numbers-mode","data-highlighter":"prismjs","data-ext":"sql"},[s("pre",null,[s("code",null,[s("span",{class:"line"},[s("span",{class:"token keyword"},"EXEC"),n(" raise_salary"),s("span",{class:"token punctuation"},"("),s("span",{class:"token number"},"100"),s("span",{class:"token punctuation"},","),n(),s("span",{class:"token number"},"500"),s("span",{class:"token punctuation"},")"),s("span",{class:"token punctuation"},";")]),n(`
`),s("span",{class:"line"})])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1)])),_:1}),a[62]||(a[62]=i(`<h2 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">FUNCTION</span> get_employee_name <span class="token punctuation">(</span></span>
<span class="line">    p_emp_id <span class="token operator">IN</span> NUMBER</span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">RETURN</span> VARCHAR2 <span class="token keyword">AS</span></span>
<span class="line">    v_name VARCHAR2<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">SELECT</span> name <span class="token keyword">INTO</span> v_name</span>
<span class="line">    <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> id <span class="token operator">=</span> p_emp_id<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">RETURN</span> v_name<span class="token punctuation">;</span></span>
<span class="line">EXCEPTION</span>
<span class="line">    <span class="token keyword">WHEN</span> NO_DATA_FOUND <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">RETURN</span> <span class="token string">&#39;Not Found&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span> get_employee_name<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="触发器" tabindex="-1"><a class="header-anchor" href="#触发器"><span>触发器</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token operator">OR</span> <span class="token keyword">REPLACE</span> <span class="token keyword">TRIGGER</span> audit_employee_changes</span>
<span class="line">BEFORE <span class="token keyword">INSERT</span> <span class="token operator">OR</span> <span class="token keyword">UPDATE</span> <span class="token operator">OR</span> <span class="token keyword">DELETE</span> <span class="token keyword">ON</span> employees</span>
<span class="line"><span class="token keyword">FOR EACH ROW</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">IF</span> INSERTING <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> audit_log <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;INSERT&#39;</span><span class="token punctuation">,</span> :NEW<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> SYSDATE<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    ELSIF UPDATING <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> audit_log <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;UPDATE&#39;</span><span class="token punctuation">,</span> :OLD<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> SYSDATE<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    ELSIF DELETING <span class="token keyword">THEN</span></span>
<span class="line">        <span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> audit_log <span class="token keyword">VALUES</span> <span class="token punctuation">(</span><span class="token string">&#39;DELETE&#39;</span><span class="token punctuation">,</span> :OLD<span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span> SYSDATE<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">IF</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="游标" tabindex="-1"><a class="header-anchor" href="#游标"><span>游标</span></a></h2><h3 id="显示游标" tabindex="-1"><a class="header-anchor" href="#显示游标"><span>显示游标</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">DECLARE</span></span>
<span class="line">    <span class="token keyword">CURSOR</span> c_emp <span class="token operator">IS</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span></span>
<span class="line">    v_emp employees<span class="token operator">%</span>ROWTYPE<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">OPEN</span> c_emp<span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">LOOP</span></span>
<span class="line">        <span class="token keyword">FETCH</span> c_emp <span class="token keyword">INTO</span> v_emp<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">EXIT</span> <span class="token keyword">WHEN</span> c_emp<span class="token operator">%</span>NOTFOUND<span class="token punctuation">;</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span>v_emp<span class="token punctuation">.</span>employee_name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">LOOP</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">CLOSE</span> c_emp<span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="隐式游标" tabindex="-1"><a class="header-anchor" href="#隐式游标"><span>隐式游标</span></a></h3><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">BEGIN</span></span>
<span class="line">    <span class="token keyword">FOR</span> emp_rec <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">)</span> <span class="token keyword">LOOP</span></span>
<span class="line">        DBMS_OUTPUT<span class="token punctuation">.</span>PUT_LINE<span class="token punctuation">(</span>emp_rec<span class="token punctuation">.</span>employee_name<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">END</span> <span class="token keyword">LOOP</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">END</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="语法对比" tabindex="-1"><a class="header-anchor" href="#语法对比"><span>语法对比</span></a></h2><h3 id="声明语法对比" tabindex="-1"><a class="header-anchor" href="#声明语法对比"><span>声明语法对比</span></a></h3><table><thead><tr><th>名称</th><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>块</td><td>DECLARE block_name IS <br> BEGIN <br>   block_body <br> EXCEPTION <br>   exception_handler <br> END;</td><td>声明块</td></tr><tr><td>类型</td><td>DECLARE TYPE type_name IS <br>   RECORD (column_name datatype,...) <br>   TABLE OF datatype INDEX BY index_name;</td><td>定义类型</td></tr><tr><td>变量</td><td>DECLARE variable_name datatype;</td><td>声明变量</td></tr></tbody></table><h3 id="创建语法对比" tabindex="-1"><a class="header-anchor" href="#创建语法对比"><span>创建语法对比</span></a></h3>`,13)),s("table",null,[a[56]||(a[56]=s("thead",null,[s("tr",null,[s("th",null,"名称"),s("th",null,"语法"),s("th",null,"说明")])],-1)),s("tbody",null,[a[54]||(a[54]=s("tr",null,[s("td",null,"存储过程"),s("td",null,[n("CREATE OR REPLACE PROCEDURE "),s("br"),n(" procedure_name (parameter_list) AS "),s("br"),n(" BEGIN "),s("br"),n("   procedure_body "),s("br"),n(" EXCEPTION "),s("br"),n("   exception_handler "),s("br"),n(" END;")]),s("td",null,"定义存储过程")],-1)),s("tr",null,[a[52]||(a[52]=s("td",null,"函数",-1)),s("td",null,[a[35]||(a[35]=n("CREATE OR REPLACE FUNCTION ")),a[36]||(a[36]=s("br",null,null,-1)),a[37]||(a[37]=n(" function_name (parameter_list) ")),a[38]||(a[38]=s("br",null,null,-1)),a[39]||(a[39]=s("strong",null,"RETURN data_type",-1)),a[40]||(a[40]=n(" AS ")),l(u,null,{default:e(()=>a[34]||(a[34]=[n("指定函数返回值的数据类型")])),_:1,__:[34]}),a[41]||(a[41]=n()),a[42]||(a[42]=s("br",null,null,-1)),a[43]||(a[43]=n(" BEGIN ")),a[44]||(a[44]=s("br",null,null,-1)),a[45]||(a[45]=n("     function_body ")),a[46]||(a[46]=s("br",null,null,-1)),a[47]||(a[47]=n(" EXCEPTION ")),a[48]||(a[48]=s("br",null,null,-1)),a[49]||(a[49]=n("   exception_handler ")),a[50]||(a[50]=s("br",null,null,-1)),a[51]||(a[51]=n(" END;"))]),a[53]||(a[53]=s("td",null,"定义函数",-1))]),a[55]||(a[55]=s("tr",null,[s("td",null,"触发器"),s("td",null,[n("CREATE OR REPLACE TRIGGER "),s("br"),n(" trigger_name "),s("br"),n(" BEFORE/AFTER insert/update/delete ON table_name FOR EACH ROW "),s("br"),n(" BEGIN "),s("br"),n("     ... "),s("br"),n(" END;")]),s("td",null,"定义触发器")],-1))])]),a[63]||(a[63]=i('<h2 id="关键字" tabindex="-1"><a class="header-anchor" href="#关键字"><span>关键字</span></a></h2><table><thead><tr><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>%TYPE</td><td>引用表的列类型</td></tr><tr><td>%ROWTYPE</td><td>引用表的记录类型</td></tr><tr><td>NO_DATA_FOUND</td><td>查询无结果</td></tr><tr><td>TOO_MANY_ROWS</td><td>查询结果多于一条</td></tr><tr><td>DUP_VAL_ON_INDEX</td><td>唯一索引冲突</td></tr><tr><td>ZERO_DIVIDE</td><td>除数为零</td></tr><tr><td>OTHERS</td><td>其他异常</td></tr></tbody></table>',2))])}const N=d(v,[["render",E]]),T=JSON.parse('{"path":"/posts/db/sql/pl_sql/","title":"PL/SQL","lang":"zh-CN","frontmatter":{"title":"PL/SQL","date":"2025-07-03T08:00:30.860Z","category":["db","sql","pl_sql"],"tags":["db","sql","pl_sql"]},"git":{"updatedTime":1751598423000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":1,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"d591477321478698e03213c788fc9b0e4b87a634","time":1751598423000,"email":"3036190149@qq.com","author":"zhaomy","message":"1. SQL 2. 游标 2. PL/SQL"}]},"filePathRelative":"posts/db/sql/pl_sql/index.md","excerpt":"\\n\\n<p>PL/SQL（Procedural Language extensions to SQL）是 Oracle 数据库的过程化编程语言，它扩展了 SQL，使其支持：</p>\\n<ul>\\n<li>变量、条件判断、循环（过程化编程）</li>\\n<li>异常处理（错误管理）</li>\\n<li>存储过程、函数、触发器（模块化编程）</li>\\n<li>游标（逐行处理查询结果）</li>\\n</ul>\\n<h2>基本结构</h2>\\n<p>PL/SQL 代码由 块（Block） 组成，分为：</p>\\n<ul>\\n<li>匿名块（临时执行）</li>\\n<li>命名块（存储过程、函数等）</li>\\n</ul>\\n<p>匿名块的语法如下：</p>"}');export{N as comp,T as data};
