import{_ as p,c as t,a as n,d as r,e as a,w as i,r as c,o as d,b as l}from"./app-DW8Bfb9C.js";const o={},v={class:"table-of-contents"};function m(u,s){const e=c("router-link");return d(),t("div",null,[s[5]||(s[5]=n("h1",{id:"python依赖管理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python依赖管理"},[n("span",null,"Python依赖管理")])],-1)),n("nav",v,[n("ul",null,[n("li",null,[a(e,{to:"#虚拟环境管理"},{default:i(()=>s[0]||(s[0]=[l("虚拟环境管理")])),_:1,__:[0]})]),n("li",null,[a(e,{to:"#依赖包管理"},{default:i(()=>s[1]||(s[1]=[l("依赖包管理")])),_:1,__:[1]})]),n("li",null,[a(e,{to:"#requirements-txt管理"},{default:i(()=>s[2]||(s[2]=[l("requirements.txt管理")])),_:1,__:[2]})]),n("li",null,[a(e,{to:"#高级依赖管理工具"},{default:i(()=>s[3]||(s[3]=[l("高级依赖管理工具")])),_:1,__:[3]})]),n("li",null,[a(e,{to:"#五、在项目中应用"},{default:i(()=>s[4]||(s[4]=[l("五、在项目中应用")])),_:1,__:[4]})])])]),s[6]||(s[6]=r(`<h2 id="虚拟环境管理" tabindex="-1"><a class="header-anchor" href="#虚拟环境管理"><span>虚拟环境管理</span></a></h2><p>在Python项目中，使用虚拟环境可以避免依赖冲突，以下是操作方法：</p><ol><li>创建虚拟环境</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 在项目目录下创建venv文件夹</span></span>
<span class="line">python <span class="token parameter variable">-m</span> venv venv</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>参数说明：</p><ul><li><code>--system-site-packages</code>：继承系统已安装的包 <code>python -m venv --system-site-packages venv</code></li><li><code>--clear</code>：清空目标目录后创建 <code>python -m venv --clear venv</code></li><li><code>--upgrade</code>：升级核心工具(pip/setuptools) <code>python -m venv --upgrade venv</code></li><li><code>--prompt PROMPT</code>：设置激活后的提示前缀 <code>python -m venv venv --prompt &quot;myproject&quot;</code></li></ul><ol start="2"><li>激活虚拟环境</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Windows命令提示符</span></span>
<span class="line">venv<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>activate.bat</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Windows PowerShell</span></span>
<span class="line">venv<span class="token punctuation">\\</span>Scripts<span class="token punctuation">\\</span>Activate.ps1</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Linux</span></span>
<span class="line"><span class="token builtin class-name">source</span> venv/bin/activate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>激活后终端会显示<code>(venv)</code>前缀，表示当前处于虚拟环境中。</p><ol start="3"><li>退出虚拟环境</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">deactivate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="依赖包管理" tabindex="-1"><a class="header-anchor" href="#依赖包管理"><span>依赖包管理</span></a></h2><p>使用pip工具管理Python包：</p><ol><li>安装依赖</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 安装指定版本</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token assign-left variable">requests</span><span class="token operator">==</span><span class="token number">2.31</span>.0</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装最新版本</span></span>
<span class="line">pip <span class="token function">install</span> requests</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 从requirements.txt安装</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>查看已安装依赖</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 简洁列表</span></span>
<span class="line">pip list</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 详细信息（包括安装路径）</span></span>
<span class="line">pip show requests</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>更新依赖</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 更新指定包</span></span>
<span class="line">pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> requests</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 更新pip自身</span></span>
<span class="line">python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> pip</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>卸载依赖</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pip uninstall requests</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="requirements-txt管理" tabindex="-1"><a class="header-anchor" href="#requirements-txt管理"><span>requirements.txt管理</span></a></h2><p>这是项目依赖的清单文件，记录所有依赖包及其版本：</p><ol><li>生成requirements.txt</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 导出当前环境所有依赖，包括未使用的</span></span>
<span class="line">pip freeze <span class="token operator">&gt;</span> requirements.txt</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 只导出项目实际使用的依赖（推荐，命令不存在）</span></span>
<span class="line">pipreqs <span class="token builtin class-name">.</span> <span class="token parameter variable">--encoding</span><span class="token operator">=</span>utf8</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>执行以下命令即可安装依赖：</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="高级依赖管理工具" tabindex="-1"><a class="header-anchor" href="#高级依赖管理工具"><span>高级依赖管理工具</span></a></h2><p>对于复杂项目，可以考虑使用以下工具：</p><ol><li>pipenv：集成虚拟环境和依赖管理</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pip <span class="token function">install</span> pipenv</span>
<span class="line">pipenv <span class="token function">install</span> requests</span>
<span class="line">pipenv shell  <span class="token comment"># 激活虚拟环境</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>poetry：现代Python依赖管理和打包工具</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">pip <span class="token function">install</span> poetry</span>
<span class="line">poetry new myproject</span>
<span class="line">poetry <span class="token function">add</span> requests</span>
<span class="line">poetry shell  <span class="token comment"># 激活虚拟环境</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="五、在项目中应用" tabindex="-1"><a class="header-anchor" href="#五、在项目中应用"><span>五、在项目中应用</span></a></h2><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># 1. 创建项目目录</span>
<span class="line">mkdir myproject &amp;&amp; cd myproject</span>
<span class="line"></span>
<span class="line"># 2. 创建虚拟环境</span>
<span class="line">python -m venv venv --prompt &quot;myproject&quot;</span>
<span class="line"></span>
<span class="line"># 3. 激活环境</span>
<span class="line">source venv/bin/activate  # Linux/Mac</span>
<span class="line"># 或 venv\\Scripts\\activate  # Windows</span>
<span class="line"></span>
<span class="line"># 4. 安装项目依赖（确保requirements.txt存在）</span>
<span class="line">pip install -r requirements.txt</span>
<span class="line"></span>
<span class="line"># 5. 开发完成后停用</span>
<span class="line">deactivate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,35))])}const h=p(o,[["render",m]]),g=JSON.parse('{"path":"/python/requirements.html","title":"Python依赖管理","lang":"zh-CN","frontmatter":{"title":"Python依赖管理","date":"2025-07-31T08:01:02.537Z","category":["python","requirements"],"tags":["python","requirements"]},"git":{"updatedTime":1754642986000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":1,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"cb442e484787959686fcf71435e2c3d5dbb77237","time":1754642986000,"email":"3036190149@qq.com","author":"zhaomy","message":"python 依赖管理、装饰器、functools、wraps"}]},"filePathRelative":"python/requirements.md","excerpt":"\\n\\n<h2>虚拟环境管理</h2>\\n<p>在Python项目中，使用虚拟环境可以避免依赖冲突，以下是操作方法：</p>\\n<ol>\\n<li>创建虚拟环境</li>\\n</ol>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\"><pre><code><span class=\\"line\\"><span class=\\"token comment\\"># 在项目目录下创建venv文件夹</span></span>\\n<span class=\\"line\\">python <span class=\\"token parameter variable\\">-m</span> venv venv</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{h as comp,g as data};
