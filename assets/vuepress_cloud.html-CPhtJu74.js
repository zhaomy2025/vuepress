import{_ as p,c as d,a as s,d as o,e as l,w as a,b as n,r as t,o as u}from"./app-ty-Ai2oG.js";const w={},c={class:"table-of-contents"};function v(m,e){const i=t("router-link"),r=t("Tip");return u(),d("div",null,[e[11]||(e[11]=s("h1",{id:"部署vuepress到云服务器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#部署vuepress到云服务器"},[s("span",null,"部署VuePress到云服务器")])],-1)),s("nav",c,[s("ul",null,[s("li",null,[l(i,{to:"#编写workflow文档"},{default:a(()=>e[0]||(e[0]=[n("编写workflow文档")])),_:1,__:[0]})]),s("li",null,[l(i,{to:"#准备需要的secrets"},{default:a(()=>e[1]||(e[1]=[n("准备需要的Secrets")])),_:1,__:[1]})]),s("li",null,[l(i,{to:"#云服务器配置"},{default:a(()=>e[2]||(e[2]=[n("云服务器配置")])),_:1,__:[2]})]),s("li",null,[l(i,{to:"#注意事项"},{default:a(()=>e[3]||(e[3]=[n("注意事项")])),_:1,__:[3]})])])]),e[12]||(e[12]=o('<h2 id="编写workflow文档" tabindex="-1"><a class="header-anchor" href="#编写workflow文档"><span>编写workflow文档</span></a></h2><p>在项目根目录下创建.github/workflows/deploy.yml文件，内容如下所示，这里给出了同时部署到云服务器和Github Pages的workflow文档，可以根据需要选择其中一个：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line">File not found</span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>npm ci 命令会严格依照 package-lock.json 安装依赖，比 npm install 更严格，不容许任何版本偏差。因此需要将本地的 package-lock.json 文件上传到云服务器，以确保部署时使用相同的依赖版本。</p></div><h2 id="准备需要的secrets" tabindex="-1"><a class="header-anchor" href="#准备需要的secrets"><span>准备需要的Secrets</span></a></h2><p>在仓库的Settings中，点击Secrets，添加以下Secrets：</p><ul><li>HOST：云服务器的域名或IP地址</li><li>USERNAME：SSH登录用户名</li><li>KEY：SSH私钥(完整内容)</li></ul><h2 id="云服务器配置" tabindex="-1"><a class="header-anchor" href="#云服务器配置"><span>云服务器配置</span></a></h2><p>宝塔面板默认配置文件：</p>',9)),s("ul",null,[s("li",null,[e[6]||(e[6]=n("配置文件目录：/www/server/nginx/conf/ ")),s("ul",null,[s("li",null,[e[5]||(e[5]=n("默认配置文件：/www/server/nginx/conf/nginx.conf ")),l(r,null,{default:a(()=>e[4]||(e[4]=[n("默认配置文件是 Nginx 的主配置文件，一般情况下，不需要修改。")])),_:1,__:[4]})])])]),s("li",null,[e[10]||(e[10]=n("站点配置文件目录：/www/server/panel/vhost/nginx/ ")),s("ul",null,[s("li",null,[e[8]||(e[8]=n("默认站点配置文件：/www/server/panel/vhost/nginx/0.default.conf ")),l(r,null,{default:a(()=>e[7]||(e[7]=[n("如果没有找到默认站点配置文件，可以手动创建。")])),_:1,__:[7]})]),e[9]||(e[9]=s("li",null,"每个站点一个文件：/www/server/panel/vhost/nginx/vuepress.conf",-1))])])]),e[13]||(e[13]=o(`<p>vuepress.conf 配置文件内容：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">cat</span> <span class="token operator">&gt;</span> /www/server/panel/vhost/nginx/vuepress.conf <span class="token operator">&lt;&lt;</span><span class="token string">EOF</span>
<span class="line">server {</span>
<span class="line">    listen 80 default_server; # 监听 80 端口</span>
<span class="line">    # 指定域名，_匹配所有未定义的请求，在新版Nginx中，更推荐显式使用 default_server，可以不设置server_name 或设为空</span>
<span class="line">    server_name _; </span>
<span class="line">    root /www/wwwroot/;# </span>
<span class="line">    index index.html index.php;</span>
<span class="line">    access_log /www/wwwlogs/vuepress.log;</span>
<span class="line">    error_log /www/wwwlogs/vuepress.error.log;</span>
<span class="line">}</span>
<span class="line">EOF</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>root配置为/www/wwwroot/，而不是/www/wwwroot/vuepress/，这是因为vuepress访问路径为http://ip/vuepress，若配置根目录为/www/wwwroot/vuepress/，就会从/www/wwwroot/vuepress/vuepress/目录下找index.html文件，导致找不到。</p><p>其实这里的配置放在0.default.conf中也行，但同样注意root不能配置为/www/wwwroot/default，否则会出现和上面一样的错误（或者把vuepress目录放到/www/wwwroot/default/目录下也行，两种方式任选其一）。</p><p>vuepress.conf和0.default.conf的配置，如果使用完全相同的<code>server_name</code>和<code>listen</code>指令会冲突，导致nginx启动失败。</p><p>站点的区分可以基于：域名、端口、IP地址、路径等：</p><ul><li>域名（最常用）： 通过 server_name 指令区分 <code>server_name www.example.com</code></li><li>端口： 通过 listen 指令区分 <code>listen 8080</code></li><li>IP地址（较少使用）： 通过 listen 绑定不同IP <code>listen 192.168.1.100:80</code></li><li>路径：通过location指令区分 <code>location /vuepress{ alias /www/wwwroot/vuepress; }</code></li></ul></div><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li>如果md文件格式有错误，会导致云端部署失败（本地运行<code>vuepress dev docs</code>时不会报错，只会在访问到该页面时报错，所以部署后需要查看日志排查错误）</li></ul>`,5))])}const h=p(w,[["render",v]]),g=JSON.parse('{"path":"/posts/vuepress/vuepress_cloud.html","title":"部署VuePress到云服务器","lang":"zh-CN","frontmatter":{"title":"部署VuePress到云服务器","date":"2025-07-09T07:32:26.463Z","category":["vuepress","cloud"],"tags":["vuepress","cloud"]},"git":{"updatedTime":1753077889000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":2,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"8b8e78fec1b97b6f54b1b1cee02a669be5ca334f","time":1753077889000,"email":"3036190149@qq.com","author":"zhaomy","message":"1. 修改GitHub Action 配置文件位置"},{"hash":"298db5b4a5a660b53712d5f6c1a01bb74f0bf2ee","time":1752224613000,"email":"3036190149@qq.com","author":"zhaomy","message":"1、部署VuePress到云服务器"}]},"filePathRelative":"posts/vuepress/vuepress_cloud.md","excerpt":"\\n\\n<h2>编写workflow文档</h2>\\n<p>在项目根目录下创建.github/workflows/deploy.yml文件，内容如下所示，这里给出了同时部署到云服务器和Github Pages的workflow文档，可以根据需要选择其中一个：</p>\\n<div class=\\"language-yaml line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"yml\\"><pre><code><span class=\\"line\\">File not found</span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"></div></div>"}');export{h as comp,g as data};
