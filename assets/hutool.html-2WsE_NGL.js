import{_ as p,c as o,a as n,d as i,e,w as t,r as c,o as r,b as l}from"./app-Cb6tOVs8.js";const u={},d={class:"table-of-contents"};function h(k,a){const s=c("router-link");return r(),o("div",null,[a[30]||(a[30]=n("h1",{id:"hutool",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hutool"},[n("span",null,"hutool")])],-1)),n("nav",d,[n("ul",null,[n("li",null,[e(s,{to:"#引入依赖"},{default:t(()=>a[0]||(a[0]=[l("引入依赖")])),_:1,__:[0]})]),n("li",null,[e(s,{to:"#核心"},{default:t(()=>a[1]||(a[1]=[l("核心")])),_:1,__:[1]}),n("ul",null,[n("li",null,[e(s,{to:"#克隆"},{default:t(()=>a[2]||(a[2]=[l("克隆")])),_:1,__:[2]})]),n("li",null,[e(s,{to:"#类型转换"},{default:t(()=>a[3]||(a[3]=[l("类型转换")])),_:1,__:[3]})]),n("li",null,[e(s,{to:"#日期时间"},{default:t(()=>a[4]||(a[4]=[l("日期时间")])),_:1,__:[4]})]),n("li",null,[e(s,{to:"#io流相关"},{default:t(()=>a[5]||(a[5]=[l("IO流相关")])),_:1,__:[5]})]),n("li",null,[e(s,{to:"#工具类"},{default:t(()=>a[6]||(a[6]=[l("工具类")])),_:1,__:[6]})]),n("li",null,[e(s,{to:"#语言特性"},{default:t(()=>a[7]||(a[7]=[l("语言特性")])),_:1,__:[7]})]),n("li",null,[e(s,{to:"#javabean"},{default:t(()=>a[8]||(a[8]=[l("JavaBean")])),_:1,__:[8]})])])]),n("li",null,[e(s,{to:"#集合类"},{default:t(()=>a[9]||(a[9]=[l("集合类")])),_:1,__:[9]}),n("ul",null,[n("li",null,[e(s,{to:"#strutil"},{default:t(()=>a[10]||(a[10]=[l("StrUtil")])),_:1,__:[10]})]),n("li",null,[e(s,{to:"#hexutil"},{default:t(()=>a[11]||(a[11]=[l("HexUtil")])),_:1,__:[11]})]),n("li",null,[e(s,{to:"#escapeutil"},{default:t(()=>a[12]||(a[12]=[l("EscapeUtil")])),_:1,__:[12]})]),n("li",null,[e(s,{to:"#hashutil"},{default:t(()=>a[13]||(a[13]=[l("HashUtil")])),_:1,__:[13]})]),n("li",null,[e(s,{to:"#urlutil"},{default:t(()=>a[14]||(a[14]=[l("URLUtil")])),_:1,__:[14]})]),n("li",null,[e(s,{to:"#reflectutil"},{default:t(()=>a[15]||(a[15]=[l("ReflectUtil")])),_:1,__:[15]})]),n("li",null,[e(s,{to:"#iterutil"},{default:t(()=>a[16]||(a[16]=[l("IterUtil")])),_:1,__:[16]})]),n("li",null,[e(s,{to:"#collutil"},{default:t(()=>a[17]||(a[17]=[l("CollUtil")])),_:1,__:[17]})]),n("li",null,[e(s,{to:"#iterator"},{default:t(()=>a[18]||(a[18]=[l("Iterator")])),_:1,__:[18]})])])]),n("li",null,[e(s,{to:"#加密解密"},{default:t(()=>a[19]||(a[19]=[l("加密解密")])),_:1,__:[19]})]),n("li",null,[e(s,{to:"#office文档操作-hutool-poi"},{default:t(()=>a[20]||(a[20]=[l("Office文档操作（Hutool-poi）")])),_:1,__:[20]}),n("ul",null,[n("li",null,[e(s,{to:"#引入poi依赖"},{default:t(()=>a[21]||(a[21]=[l("引入POI依赖")])),_:1,__:[21]})]),n("li",null,[e(s,{to:"#excelutil"},{default:t(()=>a[22]||(a[22]=[l("ExcelUtil")])),_:1,__:[22]})]),n("li",null,[e(s,{to:"#excelreader"},{default:t(()=>a[23]||(a[23]=[l("ExcelReader")])),_:1,__:[23]})]),n("li",null,[e(s,{to:"#excelwriter"},{default:t(()=>a[24]||(a[24]=[l("ExcelWriter")])),_:1,__:[24]})]),n("li",null,[e(s,{to:"#bigexcelwriter"},{default:t(()=>a[25]||(a[25]=[l("BigExcelWriter")])),_:1,__:[25]})])])]),n("li",null,[e(s,{to:"#系统调用-hutool-system"},{default:t(()=>a[26]||(a[26]=[l("系统调用（Hutool-system）")])),_:1,__:[26]})]),n("li",null,[e(s,{to:"#网络socket-hutool-socket"},{default:t(()=>a[27]||(a[27]=[l("网络Socket（Hutool-socket）")])),_:1,__:[27]})]),n("li",null,[e(s,{to:"#jwt"},{default:t(()=>a[28]||(a[28]=[l("JWT")])),_:1,__:[28]})]),n("li",null,[e(s,{to:"#扩展"},{default:t(()=>a[29]||(a[29]=[l("扩展")])),_:1,__:[29]})])])]),a[31]||(a[31]=i(`<p>此处仅列出apache和spring工具类没有的能力。</p><h2 id="引入依赖" tabindex="-1"><a class="header-anchor" href="#引入依赖"><span>引入依赖</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token operator">&lt;</span>dependency<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>groupId<span class="token operator">&gt;</span>cn.hutool<span class="token operator">&lt;</span>/groupId<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>artifactId<span class="token operator">&gt;</span>hutool-all<span class="token operator">&lt;</span>/artifactId<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span>version<span class="token operator">&gt;</span><span class="token number">5.8</span>.2<span class="token operator"><span class="token file-descriptor important">6</span>&lt;</span>/version<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span>/dependency<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="核心" tabindex="-1"><a class="header-anchor" href="#核心"><span>核心</span></a></h2><h3 id="克隆" tabindex="-1"><a class="header-anchor" href="#克隆"><span>克隆</span></a></h3><p>java自带的Cloneable接口仅支持浅克隆，若要支持深克隆，可继承CloneSupport类，或者使用</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">ObjectUtil</span><span class="token punctuation">.</span><span class="token function">cloneByStream</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>前提是对象必须实现Serializable接口。</p><h3 id="类型转换" tabindex="-1"><a class="header-anchor" href="#类型转换"><span>类型转换</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toIntArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toSBC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 半角转全角</span></span>
<span class="line"><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toDBC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 全角转半角</span></span>
<span class="line"><span class="token class-name">Convert</span><span class="token punctuation">.</span><span class="token function">toHex</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="unicode和字符串转换" tabindex="-1"><a class="header-anchor" href="#unicode和字符串转换"><span>Unicode和字符串转换</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token function">strToUnicode</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">unicodeToStr</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="时间单位转换" tabindex="-1"><a class="header-anchor" href="#时间单位转换"><span>时间单位转换</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line">convertTime</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="金额大小写转换" tabindex="-1"><a class="header-anchor" href="#金额大小写转换"><span>金额大小写转换</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line">digitToChinese</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="数组转换" tabindex="-1"><a class="header-anchor" href="#数组转换"><span>数组转换</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token function">numberToWord</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">numberToSimple</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">numberToChinese</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="日期时间" tabindex="-1"><a class="header-anchor" href="#日期时间"><span>日期时间</span></a></h3><h4 id="java日期时间类" tabindex="-1"><a class="header-anchor" href="#java日期时间类"><span>java日期时间类</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Date</span></span>
<span class="line"><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Calendar</span></span>
<span class="line"><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span>LocalDateTime</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日期时间工具" tabindex="-1"><a class="header-anchor" href="#日期时间工具"><span>日期时间工具</span></a></h4><ul><li>DateTime：继承java.util.Date</li><li>Month和Week：与Calendar中的int值一一对应，新增Quarter枚举</li><li>DateUnit：时间枚举，主要表示某个时间单位对应的毫秒数，常用于计算时间差</li><li>DateRange： 日期范围，可求交集、差集、区间</li><li>ChineseDate： 农历日期，提供了生肖、天干地支、传统节日等方法</li><li>TimeInterval： 实现计时器功能，即可以计算方法或过程执行的时间</li></ul><h5 id="dateutil" tabindex="-1"><a class="header-anchor" href="#dateutil"><span>DateUtil</span></a></h5><p><a href="https://doc.hutool.cn/pages/DateUtil/" target="_blank" rel="noopener noreferrer">日期时间工具-DateUtil | Hutool</a></p><h5 id="localdatetimeutil" tabindex="-1"><a class="header-anchor" href="#localdatetimeutil"><span>LocalDateTimeUtil</span></a></h5><p>从Hutool的5.4.x开始，Hutool加入了针对JDK8+日期API的封装，此工具类的功能包括LocalDateTime和LocalDate的解析、格式化、转换等操作。</p><p><a href="https://doc.hutool.cn/pages/LocalDateTimeUtil/" target="_blank" rel="noopener noreferrer">LocalDateTime工具-LocalDateTimeUtil | Hutool</a></p><h3 id="io流相关" tabindex="-1"><a class="header-anchor" href="#io流相关"><span>IO流相关</span></a></h3><h4 id="io工具类-ioutil" tabindex="-1"><a class="header-anchor" href="#io工具类-ioutil"><span>IO工具类-IoUtil</span></a></h4><p>io包的封装主要针对流、文件的读写封装，主要以工具类为主，提供常用功能的封装，这包括：</p><ul><li>IoUtil 流操作工具类</li><li>FileUtil 文件读写和操作的工具类。</li><li>FileTypeUtil 文件类型判断工具类</li><li>WatchMonitor 目录、文件监听，封装了JDK1.7中的WatchService</li><li>ClassPathResource针对ClassPath中资源的访问封装</li><li>FileReader 封装文件读取</li><li>FileWriter 封装文件写入</li><li>BOMInputStream针对含有BOM头的流读取</li><li>FastByteArrayOutputStream 基于快速缓冲FastByteBuffer的OutputStream，随着数据的增长自动扩充缓冲区（from blade）</li><li>FastByteBuffer 快速缓冲，将数据存放在缓冲集中，取代以往的单一数组（from blade）</li></ul><h5 id="拷贝-ioutil-copy" tabindex="-1"><a class="header-anchor" href="#拷贝-ioutil-copy"><span>拷贝 IoUtil.copy</span></a></h5><h5 id="stream转reader、writer" tabindex="-1"><a class="header-anchor" href="#stream转reader、writer"><span>Stream转Reader、Writer</span></a></h5><h4 id="文件工具类-fileutil" tabindex="-1"><a class="header-anchor" href="#文件工具类-fileutil"><span>文件工具类-FileUtil</span></a></h4><p>总体来说，FileUtil类包含以下几类操作工具：</p><ol><li>文件操作：包括文件目录的新建、删除、复制、移动、改名等</li><li>文件判断：判断文件或目录是否非空，是否为目录，是否为文件等等。</li><li>绝对路径：针对ClassPath中的文件转换为绝对路径文件。</li><li>文件名：主文件名，扩展名的获取</li><li>读操作：包括类似IoUtil中的getReader、readXXX操作</li><li>写操作：包括getWriter和writeXXX操作</li></ol><h4 id="文件监听-watchmonitor" tabindex="-1"><a class="header-anchor" href="#文件监听-watchmonitor"><span>文件监听-WatchMonitor</span></a></h4><p>SimpleWatcher</p><h4 id="文件类型判断-filetypeutil" tabindex="-1"><a class="header-anchor" href="#文件类型判断-filetypeutil"><span>文件类型判断-FileTypeUtil</span></a></h4><p>不准确</p><h4 id="文件" tabindex="-1"><a class="header-anchor" href="#文件"><span>文件</span></a></h4><h5 id="filereader" tabindex="-1"><a class="header-anchor" href="#filereader"><span>FileReader</span></a></h5><ul><li>readBytes</li><li>readString</li><li>readLines</li><li>getReader</li><li>getInputStream</li></ul><h5 id="filewriter" tabindex="-1"><a class="header-anchor" href="#filewriter"><span>FileWriter</span></a></h5><ul><li>getOutputStream</li><li>getWriter</li><li>getPrintWriter</li></ul><h5 id="fileappender" tabindex="-1"><a class="header-anchor" href="#fileappender"><span>FileAppender</span></a></h5><ul><li>append</li><li>flush</li><li>toString</li></ul><h5 id="tailer" tabindex="-1"><a class="header-anchor" href="#tailer"><span>Tailer</span></a></h5><p>start()</p><h5 id="filenameutil" tabindex="-1"><a class="header-anchor" href="#filenameutil"><span>FileNameUtil</span></a></h5><ul><li>getName</li><li>mainName</li><li>extName</li></ul><h4 id="资源" tabindex="-1"><a class="header-anchor" href="#资源"><span>资源</span></a></h4><h5 id="资源工具resourceutil" tabindex="-1"><a class="header-anchor" href="#资源工具resourceutil"><span>资源工具ResourceUtil</span></a></h5><h5 id="classpathresource" tabindex="-1"><a class="header-anchor" href="#classpathresource"><span>ClassPathResource</span></a></h5><h3 id="工具类" tabindex="-1"><a class="header-anchor" href="#工具类"><span>工具类</span></a></h3><h3 id="语言特性" tabindex="-1"><a class="header-anchor" href="#语言特性"><span>语言特性</span></a></h3><h3 id="javabean" tabindex="-1"><a class="header-anchor" href="#javabean"><span>JavaBean</span></a></h3><h4 id="beanutil" tabindex="-1"><a class="header-anchor" href="#beanutil"><span>BeanUtil</span></a></h4><h5 id="是否为bean" tabindex="-1"><a class="header-anchor" href="#是否为bean"><span>是否为Bean</span></a></h5><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">boolean</span> isBean <span class="token operator">=</span> <span class="token class-name">BeanUtil</span><span class="token punctuation">.</span><span class="token function">isBean</span><span class="token punctuation">(</span><span class="token class-name">HashMap</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h5 id="内省-introspector" tabindex="-1"><a class="header-anchor" href="#内省-introspector"><span><a href="https://www.hutool.cn/docs/#/core/JavaBean/Bean%E5%B7%A5%E5%85%B7-BeanUtil?id=%e5%86%85%e7%9c%81-introspector" target="_blank" rel="noopener noreferrer">内省 Introspector</a></span></a></h5><div class="hint-container tip"><p class="hint-container-title">提示</p><p>把一类中需要进行设置和获得的属性访问权限设置为private（私有的）让外部的使用者看不见摸不着，而通过public（共有的）set和get方法来对其属性的值来进行设置和获得，而内部的操作具体是怎样的，外界使用的人不用知道，这就称为内省。</p></div><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>getPropertyDescriptors</code></td><td>获取 bean 对象的全部属性描述符</td></tr><tr><td><code>getFieldNamePropertyDescriptorMap</code></td><td>获得字段名和字段描述Map</td></tr><tr><td><code>getPropertyDescriptor</code></td><td>获得Bean类指定属性描述</td></tr></tbody></table><h5 id="bean属性注入" tabindex="-1"><a class="header-anchor" href="#bean属性注入"><span>Bean属性注入</span></a></h5><h4 id="dynabean" tabindex="-1"><a class="header-anchor" href="#dynabean"><span>DynaBean</span></a></h4><p>DynaBean是使用反射机制动态操作JavaBean的一个封装类，通过这个类，可以通过字符串传入name方式动态调用get和set方法，也可以动态创建JavaBean对象，亦或者执行JavaBean中的方法。</p><h4 id="表达式解析beanpath" tabindex="-1"><a class="header-anchor" href="#表达式解析beanpath"><span>表达式解析BeanPath</span></a></h4><p>通过传入一个表达式，按照表达式的规则获取bean下指定的对象。</p><p>表达式分为两种：</p><ul><li><code>.</code>表达式，可以获取Bean对象中的属性（字段）值或者Map中key对应的值</li><li><code>[]</code>表达式，可以获取集合等对象中对应index的值</li></ul><h4 id="bean描述beandesc-beaninfo强化版本" tabindex="-1"><a class="header-anchor" href="#bean描述beandesc-beaninfo强化版本"><span>Bean描述BeanDesc(BeanInfo强化版本)</span></a></h4><p>BeanDesc包含所有字段（属性）及对应的Getter方法和Setter方法，与<code>BeanInfo</code>不同的是，<code>BeanDesc</code>要求属性和getter、setter必须严格对应，即如果有非public属性，没有getter，则不能获取属性值，没有setter也不能注入属性值。</p><h4 id="空检查属性获取" tabindex="-1"><a class="header-anchor" href="#空检查属性获取"><span>空检查属性获取</span></a></h4><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>ofBlankAble</td><td>相对于ofNullable考虑了字符串为空串的情况</td></tr><tr><td>get</td><td>原版Optional有区别的是，get不会抛出NoSuchElementException</td></tr><tr><td>peek</td><td>新增了peek函数，相当于ifPresent的链式调用（个人常用）</td></tr></tbody></table><h2 id="集合类" tabindex="-1"><a class="header-anchor" href="#集合类"><span>集合类</span></a></h2><h3 id="strutil" tabindex="-1"><a class="header-anchor" href="#strutil"><span>StrUtil</span></a></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>hasBlank<br>hasEmpty</td><td></td></tr><tr><td>removePrefix<br>removeSuffix<br>removePrefixIgnoreCase<br>removeSuffixIgnoreCase</td><td></td></tr><tr><td>sub</td><td>处理越界，支持负数</td></tr><tr><td>format</td><td></td></tr></tbody></table><h3 id="hexutil" tabindex="-1"><a class="header-anchor" href="#hexutil"><span>HexUtil</span></a></h3><p>16进制一般针对无法显示的一些二进制进行显示，常用于： 1、图片的字符串表现形式 2、加密解密 3、编码转换</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">String</span> str <span class="token operator">=</span> <span class="token string">&quot;我是一个字符串&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">String</span> hex <span class="token operator">=</span> <span class="token class-name">HexUtil</span><span class="token punctuation">.</span><span class="token function">encodeHexStr</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token class-name">CharsetUtil</span><span class="token punctuation">.</span><span class="token constant">CHARSET_UTF_8</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//hex是：</span></span>
<span class="line"><span class="token comment">//e68891e698afe4b880e4b8aae5ad97e7aca6e4b8b2</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">String</span> decodedStr <span class="token operator">=</span> <span class="token class-name">HexUtil</span><span class="token punctuation">.</span><span class="token function">decodeHexStr</span><span class="token punctuation">(</span>hex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//解码后与str相同</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="escapeutil" tabindex="-1"><a class="header-anchor" href="#escapeutil"><span>EscapeUtil</span></a></h3><h3 id="hashutil" tabindex="-1"><a class="header-anchor" href="#hashutil"><span>HashUtil</span></a></h3><p><code>HashUtil</code>其实是一个hash算法的集合，此工具类中融合了各种hash算法。</p><h3 id="urlutil" tabindex="-1"><a class="header-anchor" href="#urlutil"><span>URLUtil</span></a></h3><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>url</td><td>通过一个字符串形式的URL地址创建对象</td></tr><tr><td>getURL</td><td>主要获得ClassPath下资源的URL，方便读取Classpath下的配置文件等信息。</td></tr><tr><td>getPath</td><td>获得path部分</td></tr><tr><td>toURI</td><td>转URL或URL字符串为URI</td></tr><tr><td>normalize</td><td>标准化化URL链接</td></tr><tr><td>encode</td><td>封装<code>URLEncoder.encode</code>，将需要转换的内容（ASCII码形式之外的内容），用十六进制表示法转换出来，并在之前加上%开头</td></tr><tr><td>decode</td><td>封装<code>URLDecoder.decode</code>，将%开头的16进制表示的内容解码。</td></tr><tr><td></td><td></td></tr></tbody></table><h3 id="reflectutil" tabindex="-1"><a class="header-anchor" href="#reflectutil"><span>ReflectUtil</span></a></h3><p><a href="https://www.yuque.com/zhaomengyao2019/zcgsbp/bhu7v6qpuz6h46sq" target="_blank" rel="noopener noreferrer">反射</a></p><p>Hutool针对Java的反射机制做了工具化封装，封装包括：</p><ol><li>获取构造方法</li><li>获取字段</li><li>获取字段值</li><li>获取方法</li><li>执行方法（对象方法和静态方法）</li></ol><h4 id="获取某个类的所有方法" tabindex="-1"><a class="header-anchor" href="#获取某个类的所有方法"><span><a href="https://www.hutool.cn/docs/#/core/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%8F%8D%E5%B0%84%E5%B7%A5%E5%85%B7-ReflectUtil?id=%e8%8e%b7%e5%8f%96%e6%9f%90%e4%b8%aa%e7%b1%bb%e7%9a%84%e6%89%80%e6%9c%89%e6%96%b9%e6%b3%95" target="_blank" rel="noopener noreferrer">获取某个类的所有方法</a></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">Method</span><span class="token punctuation">[</span><span class="token punctuation">]</span> methods <span class="token operator">=</span> <span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">getMethods</span><span class="token punctuation">(</span><span class="token class-name">ExamInfoDict</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="获取某个类的指定方法" tabindex="-1"><a class="header-anchor" href="#获取某个类的指定方法"><span><a href="https://www.hutool.cn/docs/#/core/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%8F%8D%E5%B0%84%E5%B7%A5%E5%85%B7-ReflectUtil?id=%e8%8e%b7%e5%8f%96%e6%9f%90%e4%b8%aa%e7%b1%bb%e7%9a%84%e6%8c%87%e5%ae%9a%e6%96%b9%e6%b3%95" target="_blank" rel="noopener noreferrer">获取某个类的指定方法</a></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token comment">//Method method = ExamInfoDict.class.getMethod(&quot;getId&quot;);</span></span>
<span class="line"><span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token class-name">ExamInfoDict</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token string">&quot;getId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="构造对象" tabindex="-1"><a class="header-anchor" href="#构造对象"><span><a href="https://www.hutool.cn/docs/#/core/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%8F%8D%E5%B0%84%E5%B7%A5%E5%85%B7-ReflectUtil?id=%e6%9e%84%e9%80%a0%e5%af%b9%e8%b1%a1" target="_blank" rel="noopener noreferrer">构造对象</a></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">ExamInfoDict</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="执行方法" tabindex="-1"><a class="header-anchor" href="#执行方法"><span><a href="https://www.hutool.cn/docs/#/core/%E5%B7%A5%E5%85%B7%E7%B1%BB/%E5%8F%8D%E5%B0%84%E5%B7%A5%E5%85%B7-ReflectUtil?id=%e6%89%a7%e8%a1%8c%e6%96%b9%e6%b3%95" target="_blank" rel="noopener noreferrer">执行方法</a></span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">TestClass</span> testClass <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ReflectUtil</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>testClass<span class="token punctuation">,</span> <span class="token string">&quot;setA&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="iterutil" tabindex="-1"><a class="header-anchor" href="#iterutil"><span>IterUtil</span></a></h3><h3 id="collutil" tabindex="-1"><a class="header-anchor" href="#collutil"><span>CollUtil</span></a></h3><h3 id="iterator" tabindex="-1"><a class="header-anchor" href="#iterator"><span>Iterator</span></a></h3><h2 id="加密解密" tabindex="-1"><a class="header-anchor" href="#加密解密"><span>加密解密</span></a></h2><h2 id="office文档操作-hutool-poi" tabindex="-1"><a class="header-anchor" href="#office文档操作-hutool-poi"><span>Office文档操作（Hutool-poi）</span></a></h2><p>Hutool提供的类有：</p><ul><li>ExcelUtil Excel工具类，读取的快捷方法都被封装于此</li><li>ExcelReader Excel读取器，Excel读取的封装，可以直接构造后使用。</li><li>ExcelWriter Excel生成并写出器，Excel写出的封装（写出到流或者文件），可以直接构造后使用。</li></ul><h3 id="引入poi依赖" tabindex="-1"><a class="header-anchor" href="#引入poi依赖"><span>引入POI依赖</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>poi<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>poi<span class="token operator">-</span>ooxml<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span>$<span class="token punctuation">{</span>poi<span class="token punctuation">.</span>version<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span></span>
<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="excelutil" tabindex="-1"><a class="header-anchor" href="#excelutil"><span>ExcelUtil</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">ExcelReader</span> reader <span class="token operator">=</span> <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token string">&quot;test.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">ExcelReader</span> reader <span class="token operator">=</span> <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token class-name">ResourceUtil</span><span class="token punctuation">.</span><span class="token function">getStream</span><span class="token punctuation">(</span><span class="token string">&quot;aaa.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">ExcelReader</span> reader<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//通过sheet编号获取</span></span>
<span class="line">reader <span class="token operator">=</span> <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token string">&quot;test.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">//通过sheet名获取</span></span>
<span class="line">reader <span class="token operator">=</span> <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span><span class="token string">&quot;test.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;sheet1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">private</span> <span class="token class-name">RowHandler</span> <span class="token function">createRowHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RowHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">		<span class="token annotation punctuation">@Override</span></span>
<span class="line">		<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token keyword">int</span> sheetIndex<span class="token punctuation">,</span> <span class="token keyword">int</span> rowIndex<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> rowlist<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">			<span class="token class-name">Console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;[{}] [{}] {}&quot;</span><span class="token punctuation">,</span> sheetIndex<span class="token punctuation">,</span> rowIndex<span class="token punctuation">,</span> rowlist<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">		<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">readBySax</span><span class="token punctuation">(</span><span class="token string">&quot;aaa.xlsx&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token function">createRowHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="excelreader" tabindex="-1"><a class="header-anchor" href="#excelreader"><span>ExcelReader</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">ExcelReader</span> reader <span class="token operator">=</span> <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token string">&quot;d:/aaa.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> readAll <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">ExcelReader</span> reader <span class="token operator">=</span> <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token string">&quot;d:/aaa.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> readAll <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token class-name">ExcelReader</span> reader <span class="token operator">=</span> <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">getReader</span><span class="token punctuation">(</span><span class="token string">&quot;d:/aaa.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">&gt;</span></span> all <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="excelwriter" tabindex="-1"><a class="header-anchor" href="#excelwriter"><span>ExcelWriter</span></a></h3><p>Hutool将Excel写出封装为ExcelWriter，原理为包装了Workbook对象，每次调用merge（合并单元格）或者write（写出数据）方法后只是将数据写入到Workbook，并不写出文件，只有调用flush或者close方法后才会真正写出文件。</p><p>由于机制原因，在写出结束后需要关闭ExcelWriter对象，调用close方法即可关闭，此时才会释放Workbook对象资源，否则带有数据的Workbook一直会常驻内存。</p><h3 id="bigexcelwriter" tabindex="-1"><a class="header-anchor" href="#bigexcelwriter"><span>BigExcelWriter</span></a></h3><p>使用方法与ExcelWriter完全一致</p><h2 id="系统调用-hutool-system" tabindex="-1"><a class="header-anchor" href="#系统调用-hutool-system"><span>系统调用（Hutool-system）</span></a></h2><p>此工具是针对System.getProperty(name)的封装，通过此工具，可以获取Java Virtual Machine Specification等信息</p><h2 id="网络socket-hutool-socket" tabindex="-1"><a class="header-anchor" href="#网络socket-hutool-socket"><span>网络Socket（Hutool-socket）</span></a></h2><p>JDK中提供了Socket功能，包括：</p><ul><li>BIO</li><li>NIO</li><li>AIO</li></ul><p>Hutool只针对NIO和AIO做了简单的封装，用于简化Socket异步开发。</p><p>现阶段，Hutool的socket封装依旧不是一个完整框架或者高效的工具类，不能提供完整的高性能IO功能，因此推荐更加专业的Socket库。例如：</p><p><a href="https://gitee.com/tywo45/t-io" target="_blank" rel="noopener noreferrer">t-io(opens new window)</a></p><p><a href="http://www.voovan.org/" target="_blank" rel="noopener noreferrer">Voovan(opens new window)</a></p><p><a href="https://netty.io/" target="_blank" rel="noopener noreferrer">Netty(opens new window)</a></p><p><a href="https://mina.apache.org/" target="_blank" rel="noopener noreferrer">Mina</a></p><h2 id="jwt" tabindex="-1"><a class="header-anchor" href="#jwt"><span>JWT</span></a></h2><p>JWT是一种网络身份认证和信息交换格式，目前还是业内前后端分离验证用的比较多的方案。</p><h2 id="扩展" tabindex="-1"><a class="header-anchor" href="#扩展"><span>扩展</span></a></h2>`,134))])}const v=p(u,[["render",h]]),b=JSON.parse('{"path":"/posts/java/utils/hutool.html","title":"hutool","lang":"zh-CN","frontmatter":{"title":"hutool","date":"2025-07-15T01:33:29.263Z","category":["java","utils","hutool"],"tags":["java","utils","hutool"]},"git":{"updatedTime":1752561310000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":1,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"e5512f7153d6d6bfe2919c55419f1a8ef5e3fc96","time":1752561310000,"email":"3036190149@qq.com","author":"zhaomy","message":"1. Zookeeper 2. Java工具库"}]},"filePathRelative":"posts/java/utils/hutool.md","excerpt":"\\n\\n<p>此处仅列出apache和spring工具类没有的能力。</p>\\n<h2>引入依赖</h2>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"sh\\"><pre><code><span class=\\"line\\"><span class=\\"token operator\\">&lt;</span>dependency<span class=\\"token operator\\">&gt;</span></span>\\n<span class=\\"line\\">    <span class=\\"token operator\\">&lt;</span>groupId<span class=\\"token operator\\">&gt;</span>cn.hutool<span class=\\"token operator\\">&lt;</span>/groupId<span class=\\"token operator\\">&gt;</span></span>\\n<span class=\\"line\\">    <span class=\\"token operator\\">&lt;</span>artifactId<span class=\\"token operator\\">&gt;</span>hutool-all<span class=\\"token operator\\">&lt;</span>/artifactId<span class=\\"token operator\\">&gt;</span></span>\\n<span class=\\"line\\">    <span class=\\"token operator\\">&lt;</span>version<span class=\\"token operator\\">&gt;</span><span class=\\"token number\\">5.8</span>.2<span class=\\"token operator\\"><span class=\\"token file-descriptor important\\">6</span>&lt;</span>/version<span class=\\"token operator\\">&gt;</span></span>\\n<span class=\\"line\\"><span class=\\"token operator\\">&lt;</span>/dependency<span class=\\"token operator\\">&gt;</span></span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{v as comp,b as data};
