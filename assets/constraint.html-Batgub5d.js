import{_ as l,c as p,a as s,d,e as t,w as e,r as o,o as c,b as i}from"./app-REDOwCgz.js";const r={},u={class:"table-of-contents"};function m(h,n){const a=o("router-link");return c(),p("div",null,[n[4]||(n[4]=s("h1",{id:"约束",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#约束"},[s("span",null,"约束")])],-1)),s("nav",u,[s("ul",null,[s("li",null,[t(a,{to:"#创建表时定义约束"},{default:e(()=>n[0]||(n[0]=[i("创建表时定义约束")])),_:1,__:[0]}),s("ul",null,[s("li",null,[t(a,{to:"#单个约束"},{default:e(()=>n[1]||(n[1]=[i("单个约束")])),_:1,__:[1]})])])]),s("li",null,[t(a,{to:"#修改表时定义约束"},{default:e(()=>n[2]||(n[2]=[i("修改表时定义约束")])),_:1,__:[2]})]),s("li",null,[t(a,{to:"#删除约束"},{default:e(()=>n[3]||(n[3]=[i("删除约束")])),_:1,__:[3]})])])]),n[5]||(n[5]=d(`<h2 id="创建表时定义约束" tabindex="-1"><a class="header-anchor" href="#创建表时定义约束"><span>创建表时定义约束</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>MySQL 定义约束时，除NOT NULL外，约束单独一行，放在字段定义后面。 SQL Server/Oracle 定义约束时，除CHECK外，约束与字段定义在同一行。 根据是否有名称，约束可分为匿名约束和命名约束。</p></div><h3 id="单个约束" tabindex="-1"><a class="header-anchor" href="#单个约束"><span>单个约束</span></a></h3><p>基本语法：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">CONSTRAINT</span> <span class="token punctuation">[</span>constraint_name<span class="token punctuation">]</span> <span class="token punctuation">[</span>constraint_type<span class="token punctuation">]</span> <span class="token punctuation">(</span>parameter_list<span class="token punctuation">)</span></span>
<span class="line">参数说明：</span>
<span class="line"><span class="token punctuation">[</span>constraint_name<span class="token punctuation">]</span> 约束名称，可选</span>
<span class="line">当不指定约束名称时，<span class="token keyword">CONSTRAINT</span> 关键字可以省略</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>约束类型</th><th>MySQL</th><th>SQL Server/Oracle</th></tr></thead><tbody><tr><td>NOT NULL</td><td><code>NOT NULL</code></td><td><code>NOT NULL</code></td></tr><tr><td>UNIQUE</td><td><code>UNIQUE(p_id)</code></td><td><code>p_id int UNIQUE</code></td></tr><tr><td>PRIMARY KEY</td><td><code>PRIMARY KEY(p_id)</code></td><td><code>p_id int PRIMARY KEY</code></td></tr><tr><td>FOREIGN KEY</td><td><code>FOREIGN KEY(p_id) REFERENCES t_person(p_id)</code></td><td><code>p_id int FOREIGN KEY REFERENCES t_person(p_id)</code></td></tr><tr><td>CHECK</td><td><code>CHECK(GENDER LIKE &#39;[MF]&#39;)</code></td><td><code>CHECK(GENDER LIKE &#39;[MF]&#39;)</code></td></tr></tbody></table><h2 id="修改表时定义约束" tabindex="-1"><a class="header-anchor" href="#修改表时定义约束"><span>修改表时定义约束</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><p>MySQL/SQL Server/Oracle 为已存在的表添加约束时，都通过 <code>ALTER TABLE table_name ADD CONSTRAINT constraint_name constraint_type(parameter_list)</code> 语句来实现。 和创建表时定义约束时一样，根据是否有名称，约束可分为匿名约束和命名约束。</p></div><p>基本语法：</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">ADD</span> <span class="token punctuation">[</span><span class="token keyword">CONSTRAINT</span> <span class="token punctuation">[</span>constraint_name<span class="token punctuation">]</span> constraint_type<span class="token punctuation">(</span>parameter_list<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="删除约束" tabindex="-1"><a class="header-anchor" href="#删除约束"><span>删除约束</span></a></h2><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql"><pre><code><span class="line"><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> table_name <span class="token keyword">DROP</span> constraint_type constraint_name</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,12))])}const k=l(r,[["render",m]]),_=JSON.parse('{"path":"/posts/db/sql/constraint.html","title":"约束","lang":"zh-CN","frontmatter":{"title":"约束","date":"2025-07-04T03:13:18.017Z","category":["db","sql","constraint"],"tags":["db","sql","constraint"]},"git":{"updatedTime":1752129905000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":1,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"89d9c80ddca34f12fdf6868c2589628910e05999","time":1752129905000,"email":"3036190149@qq.com","author":"zhaomy","message":"修改部署路径"}]},"filePathRelative":"posts/db/sql/constraint.md","excerpt":"\\n\\n<h2>创建表时定义约束</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>MySQL 定义约束时，除NOT NULL外，约束单独一行，放在字段定义后面。\\nSQL Server/Oracle 定义约束时，除CHECK外，约束与字段定义在同一行。\\n根据是否有名称，约束可分为匿名约束和命名约束。</p>\\n</div>\\n<h3>单个约束</h3>\\n<p>基本语法：</p>\\n<div class=\\"language-sql line-numbers-mode\\" data-highlighter=\\"prismjs\\" data-ext=\\"sql\\"><pre><code><span class=\\"line\\"><span class=\\"token keyword\\">CONSTRAINT</span> <span class=\\"token punctuation\\">[</span>constraint_name<span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">[</span>constraint_type<span class=\\"token punctuation\\">]</span> <span class=\\"token punctuation\\">(</span>parameter_list<span class=\\"token punctuation\\">)</span></span>\\n<span class=\\"line\\">参数说明：</span>\\n<span class=\\"line\\"><span class=\\"token punctuation\\">[</span>constraint_name<span class=\\"token punctuation\\">]</span> 约束名称，可选</span>\\n<span class=\\"line\\">当不指定约束名称时，<span class=\\"token keyword\\">CONSTRAINT</span> 关键字可以省略</span>\\n<span class=\\"line\\"></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{k as comp,_ as data};
