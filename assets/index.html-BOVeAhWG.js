import{_ as r,c as o,a as t,d as l,e as n,w as s,r as d,o as m,b as i}from"./app-CfDefuCP.js";const p={},h={class:"table-of-contents"};function b(c,a){const e=d("router-link");return m(),o("div",null,[a[6]||(a[6]=t("h1",{id:"mybatis",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#mybatis"},[t("span",null,"MyBatis")])],-1)),t("nav",h,[t("ul",null,[t("li",null,[n(e,{to:"#什么是orm"},{default:s(()=>a[0]||(a[0]=[i("什么是ORM")])),_:1,__:[0]}),t("ul",null,[t("li",null,[n(e,{to:"#什么是全自动orm"},{default:s(()=>a[1]||(a[1]=[i("什么是全自动ORM")])),_:1,__:[1]})]),t("li",null,[n(e,{to:"#什么是半自动orm"},{default:s(()=>a[2]||(a[2]=[i("什么是半自动ORM")])),_:1,__:[2]})])])]),t("li",null,[n(e,{to:"#hibernate"},{default:s(()=>a[3]||(a[3]=[i("Hibernate")])),_:1,__:[3]})]),t("li",null,[n(e,{to:"#spring-data-jpa"},{default:s(()=>a[4]||(a[4]=[i("Spring-data-jpa")])),_:1,__:[4]})]),t("li",null,[n(e,{to:"#mybatis-1"},{default:s(()=>a[5]||(a[5]=[i("MyBatis")])),_:1,__:[5]})])])]),a[7]||(a[7]=l('<h2 id="什么是orm" tabindex="-1"><a class="header-anchor" href="#什么是orm"><span>什么是ORM</span></a></h2><p>ORM（Object-Relational Mapping，对象-关系映射）通过使用描述对象和数据库之间映射的元数据，将java程序中的对象自动持久化到关系数据库中。</p><h3 id="什么是全自动orm" tabindex="-1"><a class="header-anchor" href="#什么是全自动orm"><span>什么是全自动ORM</span></a></h3><p>ORM框架可以根据对象关系模型直接获取，查询关联对象或者关联集合对象，简单而言使用全自动的ORM框架查询时可以不再写SQL。典型的框架如Hibernate； 因为Spring-data-jpa很多代码也是Hibernate团队贡献的，所以spring-data-jpa也是全自动ORM框架。</p><h3 id="什么是半自动orm" tabindex="-1"><a class="header-anchor" href="#什么是半自动orm"><span>什么是半自动ORM</span></a></h3><p>半自动ORM框架需要手动编写SQL代码。典型的框架如MyBatis。</p><h2 id="hibernate" tabindex="-1"><a class="header-anchor" href="#hibernate"><span>Hibernate</span></a></h2><h2 id="spring-data-jpa" tabindex="-1"><a class="header-anchor" href="#spring-data-jpa"><span>Spring-data-jpa</span></a></h2><h2 id="mybatis-1" tabindex="-1"><a class="header-anchor" href="#mybatis-1"><span>MyBatis</span></a></h2><p>MyBatis 是一款优秀的持久层框架，它支持定制化 SQL、存储过程以及高级映射。</p><ul><li>MyBatis是一款优秀的基于java的持久层框架，它内部封装了jdbc，使开发者只需要关注sql语句本身，无需关注加载驱动、创建连接、创建statement等繁杂的过程。</li><li>mybatis通过xml或注解的方式将要执行的各种statement配置起来，并通过java对象和statement中sql的动态参数进行映射生成最终执行的sql语句，最后由mybatis框架执行sql并将结果映射为java对象并返回。</li></ul>',11))])}const M=r(p,[["render",b]]),f=JSON.parse('{"path":"/java/orm/","title":"MyBatis","lang":"zh-CN","frontmatter":{"title":"MyBatis","date":"2025-06-20T08:45:23.497Z","category":["framework","mybatis"],"tags":["framework","mybatis"]},"git":{"updatedTime":1754642867000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":3,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"b2ec0058d9c52bcd768c04c96c8824ef5d82bbf4","time":1754642867000,"email":"3036190149@qq.com","author":"zhaomy","message":"Java目录移动"},{"hash":"d72ca8e867076fb230331ac91b3c1b164a0e500f","time":1750750917000,"email":"3036190149@qq.com","author":"zhaomy","message":"1、java：json、MyBatis 2、Spring集成Oracle 3、源码解析 4、Markdown文件格式化：去除字体"},{"hash":"6d5eae914a088d19d1434bfdcb0cde6db26e6bae","time":1750728343000,"email":"3036190149@qq.com","author":"zhaomy","message":"1、MyBatis"}]},"filePathRelative":"java/orm/index.md","excerpt":"\\n\\n<h2>什么是ORM</h2>\\n<p>ORM（Object-Relational Mapping，对象-关系映射）通过使用描述对象和数据库之间映射的元数据，将java程序中的对象自动持久化到关系数据库中。</p>\\n<h3>什么是全自动ORM</h3>\\n<p>ORM框架可以根据对象关系模型直接获取，查询关联对象或者关联集合对象，简单而言使用全自动的ORM框架查询时可以不再写SQL。典型的框架如Hibernate； 因为Spring-data-jpa很多代码也是Hibernate团队贡献的，所以spring-data-jpa也是全自动ORM框架。</p>\\n<h3>什么是半自动ORM</h3>\\n"}');export{M as comp,f as data};
