import{_ as t,c as a,a as o,o as r}from"./app-DhQSeJGz.js";const s={};function c(n,e){return r(),a("div",null,e[0]||(e[0]=[o("p",null,"在 Java 编程语言的构造函数中，允许在显式构造函数调用（即 super(..) 或 this(..)）之前出现语句。这些语句不能引用正在构建的实例，但可以初始化其字段。在调用另一个构造函数之前初始化字段，可以在方法被重写时提高类的可靠性。这是一个预览语言特性。",-1)]))}const m=t(s,[["render",c]]),l=JSON.parse('{"path":"/java/new-features/flexible-constructor-bodies-intro.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1757919595000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":1,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"a56dd23708c5d2f36ccc4bf8fe2380b4e747453c","time":1757919595000,"email":"3036190149@qq.com","author":"zhaomy","message":"java24、java25新特性修改"}]},"filePathRelative":"java/new-features/flexible-constructor-bodies-intro.md","excerpt":"<p>在 Java 编程语言的构造函数中，允许在显式构造函数调用（即 super(..) 或 this(..)）之前出现语句。这些语句不能引用正在构建的实例，但可以初始化其字段。在调用另一个构造函数之前初始化字段，可以在方法被重写时提高类的可靠性。这是一个预览语言特性。</p>\\n"}');export{m as comp,l as data};
