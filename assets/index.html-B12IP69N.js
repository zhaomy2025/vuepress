import{_ as i,c as a,d as e,o as t}from"./app-DW8Bfb9C.js";const o={};function n(s,l){return t(),a("div",null,l[0]||(l[0]=[e('<h2 id="httpx-开发者工具-模板和-localsend-普通用户工具-模板对比" tabindex="-1"><a class="header-anchor" href="#httpx-开发者工具-模板和-localsend-普通用户工具-模板对比"><span>HTTPX（开发者工具） 模板和 LocalSend（普通用户工具） 模板对比</span></a></h2><h3 id="相同点" tabindex="-1"><a class="header-anchor" href="#相同点"><span>相同点</span></a></h3><ol><li>都包含 标题、引言、核心介绍、特性列表、安装方法、使用说明 和 总结 等核心部分</li><li>都使用了 视觉元素 （图片）增强可读性</li><li>都提供了 代码块 展示安装或使用命令</li><li>都强调了工具的 现代化特性 和 相比传统方案的优势</li></ol><h3 id="不同点" tabindex="-1"><a class="header-anchor" href="#不同点"><span>不同点</span></a></h3><ol><li>侧重点不同 ：</li></ol><ul><li>HTTPX模板更侧重 技术对比 （与Requests的详细特性比较表格）</li><li>LocalSend模板更侧重 项目背景和实用性 （使用场景描述、多平台安装细节） 2.结构细节不同 ：</li><li>HTTPX模板包含 功能对比表格 ，直观展示优势</li><li>LocalSend模板有 兼容性要求 和 详细安装指南 （针对不同操作系统）</li></ul><ol start="3"><li>目标受众不同 ：</li></ol><ul><li>HTTPX模板面向 开发者 ，强调编程体验和技术特性</li><li>LocalSend模板面向 普通用户和开发者 ，更注重易用性和广泛适用性</li></ul><ol start="4"><li>技术深度不同 ：</li></ol><ul><li>HTTPX模板包含 具体编程场景 的使用示例</li><li>LocalSend模板提供 项目编译步骤 ，适合希望深入了解的用户</li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>两个模板各有特色，分别适用于不同类型的开源工具介绍，但都遵循了清晰、结构化的内容组织方式，便于读者快速理解工具的核心价值。</p><h2 id="免费拥有一个自己的网站-建站教程模板-模板介绍及对比" tabindex="-1"><a class="header-anchor" href="#免费拥有一个自己的网站-建站教程模板-模板介绍及对比"><span>免费拥有一个自己的网站（建站教程模板） 模板介绍及对比</span></a></h2><h3 id="tutorial-website-setup-template-md-模板介绍" tabindex="-1"><a class="header-anchor" href="#tutorial-website-setup-template-md-模板介绍"><span>tutorial_website_setup_template.md 模板介绍</span></a></h3><ul><li>目标 ：指导用户从零开始搭建网站</li><li>结构 ：标题 → 介绍（为什么需要网站）→ 平台组合说明 → 准备工作 → 详细步骤（分三部分）→ 高级使用技巧 → 总结</li><li>特点 ： <ul><li>包含明确的步骤划分（第一部分、第二部分等）</li><li>提供详细的代码块示例（Git命令、配置文件等）</li><li>包含具体的操作指南和路径说明</li><li>强调免费和易用性</li></ul></li><li>适用场景 ：技术教程、分步指南</li></ul><h3 id="与-code-tool-template-md-的对比" tabindex="-1"><a class="header-anchor" href="#与-code-tool-template-md-的对比"><span>与 code_tool_template.md 的对比</span></a></h3><ol><li>核心差异 ： <ul><li>教程模板聚焦于&quot;如何做&quot;（过程导向）</li><li>代码工具模板聚焦于&quot;是什么&quot;（工具特性导向）</li></ul></li><li>结构差异 ： <ul><li>教程模板有明确的步骤划分和操作指南</li><li>代码工具模板包含特性对比表格和使用场景示例</li></ul></li><li>内容侧重点 ： <ul><li>教程模板详细描述操作步骤和代码使用</li><li>代码工具模板强调工具优势和技术特性</li></ul></li></ol><h3 id="与-tool-template-md-的对比" tabindex="-1"><a class="header-anchor" href="#与-tool-template-md-的对比"><span>与 tool_template.md 的对比</span></a></h3><ol><li>核心差异 ： <ul><li>教程模板是过程导向的分步指南</li><li>通用工具模板是功能导向的工具介绍</li></ul></li><li>结构差异 ： <ul><li>教程模板有严格的步骤顺序和逻辑流程</li><li>通用工具模板包含多平台安装方法和兼容性要求</li></ul></li><li>目标受众 ： <ul><li>教程模板针对初学者和想动手实践的用户</li><li>通用工具模板针对寻找解决方案的用户</li></ul></li></ol><h3 id="免费拥有一个自己的网站-公众号文章-和-github-pages-hexo搭建个人网站-博客文章-对比" tabindex="-1"><a class="header-anchor" href="#免费拥有一个自己的网站-公众号文章-和-github-pages-hexo搭建个人网站-博客文章-对比"><span>免费拥有一个自己的网站（公众号文章） 和 GitHub Pages + Hexo搭建个人网站（博客文章） 对比</span></a></h3><h4 id="文章结构对比" tabindex="-1"><a class="header-anchor" href="#文章结构对比"><span>文章结构对比</span></a></h4><ul><li>公众号文章（ <code>免费拥有一个自己的网站.md</code> ） <ul><li>整体结构 ：采用&quot;概念介绍+分步教程&quot;模式，先详细解释GitHub和Hexo的基础概念，再进入实操环节</li><li>章节划分 ： <ul><li>第一部分：介绍GitHub和Hexo是什么（含代码托管、网站托管等核心概念解释）</li><li>第二部分：GitHub创建个人仓库（准备工作、部署步骤）</li><li>第三部分：Hexo安装与使用（与Jekyll对比、安装步骤、主题配置）</li><li>第四部分：高级使用技巧（独立域名绑定）</li></ul></li><li>特点 ：结构层次较多，概念解释篇幅较大，操作步骤与概念讲解交织</li></ul></li><li>博客文章（ <code>GitHub-Pages-Hexo搭建个人网站.md</code> ） <ul><li>整体结构 ：采用&quot;实操导向&quot;模式，直接进入操作步骤，概念穿插在步骤中简要说明</li><li>章节划分 ： <ul><li>第一部分：准备环境（GitHub账号、Node.js和Git安装）</li><li>第二部分：安装Hexo</li><li>第三部分：部署网站（重点介绍GitHub Actions配置）</li><li>第四部分：撰写文章</li><li>第五部分：主题配置</li><li>第六部分：Markdown渲染器选择</li></ul></li><li>特点 ：结构更紧凑，直奔主题，操作步骤清晰，技术细节丰富</li></ul></li></ul><h4 id="文章风格对比" tabindex="-1"><a class="header-anchor" href="#文章风格对比"><span>文章风格对比</span></a></h4><ul><li>公众号文章风格 <ul><li>语言特点 ：口语化、通俗化，带有个人化表达（如&quot;博客一看就充满了贫穷的气味！咦~&quot;）</li><li>表达方式 ：使用比喻（如将GitHub比作&quot;巨大的免费在线保险箱&quot;）和表情符号（🚀、✨）增加亲和力</li><li>内容侧重 ：注重概念解释，适合完全零基础的初学者</li><li>主观色彩 ：包含个人推荐（如&quot;推荐使用Hexo而不是Jekyll&quot;）</li><li>可读性 ：段落较短，解释详尽，阅读门槛低</li></ul></li><li>博客文章风格 <ul><li>语言特点 ：正式、简洁、技术化，以指令和说明为主</li><li>表达方式 ：直接给出操作命令和代码，减少冗余解释</li><li>内容侧重 ：注重技术细节（如Node.js版本要求、SSH密钥配置、GitHub Actions工作流）</li><li>主观色彩 ：较少个人评论，更偏向客观教程</li><li>可读性 ：信息密度高，适合有一定技术基础的读者</li></ul></li></ul><h4 id="总结-1" tabindex="-1"><a class="header-anchor" href="#总结-1"><span>总结</span></a></h4><p>公众号文章更适合完全零基础、需要详细概念解释的初学者，风格轻松易懂；博客文章则更适合有一定技术基础、希望快速掌握实操步骤的用户，内容更专业、细节更丰富。两者各有侧重，互为补充。</p><h2 id="模板提取-prompt" tabindex="-1"><a class="header-anchor" href="#模板提取-prompt"><span>模板提取 Prompt</span></a></h2><p>仿照XXX文章，总结当前文章的结构，生成一篇模板，并与上一篇模板进行比较，总结出不同点</p><h2 id="文章改写-prompt" tabindex="-1"><a class="header-anchor" href="#文章改写-prompt"><span>文章改写 Prompt</span></a></h2><p>按照公众号风格改写放到目录下，要求</p><ol><li>适合完全零基础、需要详细概念解释的初学者，风格轻松易懂</li><li>整体结构 ：采用&quot;概念介绍+分步教程&quot;模式，先详细解释GitHub和Hexo的基础概念，再进入实操环节</li><li>第一部分：介绍GitHub和Hexo是什么（含代码托管、网站托管等核心概念解释）</li><li>第二部分：GitHub创建个人仓库（准备工作、部署步骤）</li><li>第三部分：Hexo安装与使用（安装步骤、部署、主题配置）</li><li>第四部分：高级使用技巧（独立域名绑定、选择更高级的Markdown渲染器）</li></ol><p>注意：</p><ol><li>无需支持GitLab，仅保留GitHub相关内容</li><li>可参考 和 ，但要注意不能出现连续8个字与重复</li><li>需要图解的地方，比如新建仓库步骤，给出提示，后面我会补充</li><li>独立域名绑定详细介绍</li><li>选择更高级的Markdown渲染器 详细介绍，参考</li></ol>',33)]))}const d=i(o,[["render",n]]),u=JSON.parse('{"path":"/template/","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1755584816000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":2,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"a1e697e6eb8f6463a10030f79811f7b8f8eccdd2","time":1755584816000,"email":"3036190149@qq.com","author":"zhaomy","message":"建站教程模板及对比、模板提取及文章改写提示词"},{"hash":"342c273fd31716959f5c19b1cbfa0ee2d0a0e199","time":1754548152000,"email":"3036190149@qq.com","author":"zhaomy","message":"HTTPX：Python中的下一代HTTP客户端，比Requests更强大！"}]},"filePathRelative":"template/index.md","excerpt":"<h2>HTTPX（开发者工具） 模板和 LocalSend（普通用户工具） 模板对比</h2>\\n<h3>相同点</h3>\\n<ol>\\n<li>都包含 标题、引言、核心介绍、特性列表、安装方法、使用说明 和 总结 等核心部分</li>\\n<li>都使用了 视觉元素 （图片）增强可读性</li>\\n<li>都提供了 代码块 展示安装或使用命令</li>\\n<li>都强调了工具的 现代化特性 和 相比传统方案的优势</li>\\n</ol>\\n<h3>不同点</h3>\\n<ol>\\n<li>侧重点不同 ：</li>\\n</ol>\\n<ul>\\n<li>HTTPX模板更侧重 技术对比 （与Requests的详细特性比较表格）</li>\\n<li>LocalSend模板更侧重 项目背景和实用性 （使用场景描述、多平台安装细节）\\n2.结构细节不同 ：</li>\\n<li>HTTPX模板包含 功能对比表格 ，直观展示优势</li>\\n<li>LocalSend模板有 兼容性要求 和 详细安装指南 （针对不同操作系统）</li>\\n</ul>"}');export{d as comp,u as data};
