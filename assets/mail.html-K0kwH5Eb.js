import{_ as i,c as u,a as s,d as o,e as t,w as p,b as a,r as c,o as k}from"./app-DW8Bfb9C.js";const r={},d={class:"table-of-contents"};function m(v,n){const e=c("router-link"),l=c("RouteLink");return k(),u("div",null,[n[12]||(n[12]=s("h1",{id:"java-邮件服务",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#java-邮件服务"},[s("span",null,"Java 邮件服务")])],-1)),s("nav",d,[s("ul",null,[s("li",null,[t(e,{to:"#核心技术标准-javamail-api"},{default:p(()=>n[0]||(n[0]=[a("核心技术标准：JavaMail API")])),_:1,__:[0]}),s("ul",null,[s("li",null,[t(e,{to:"#基础依赖配置"},{default:p(()=>n[1]||(n[1]=[a("基础依赖配置")])),_:1,__:[1]})])])]),s("li",null,[t(e,{to:"#主流实现方式"},{default:p(()=>n[2]||(n[2]=[a("主流实现方式")])),_:1,__:[2]}),s("ul",null,[s("li",null,[t(e,{to:"#原生-javamail-实现-适用于简单场景"},{default:p(()=>n[3]||(n[3]=[a("原生 JavaMail 实现（适用于简单场景）")])),_:1,__:[3]})]),s("li",null,[t(e,{to:"#spring-framework-集成-企业级开发首选"},{default:p(()=>n[4]||(n[4]=[a("Spring Framework 集成（企业级开发首选）")])),_:1,__:[4]})])])]),s("li",null,[t(e,{to:"#关键技术点解析"},{default:p(()=>n[5]||(n[5]=[a("关键技术点解析")])),_:1,__:[5]}),s("ul",null,[s("li",null,[t(e,{to:"#邮件服务器配置差异"},{default:p(()=>n[6]||(n[6]=[a("邮件服务器配置差异")])),_:1,__:[6]})]),s("li",null,[t(e,{to:"#最佳实践与避坑指南"},{default:p(()=>n[7]||(n[7]=[a("最佳实践与避坑指南")])),_:1,__:[7]})]),s("li",null,[t(e,{to:"#替代方案与框架"},{default:p(()=>n[8]||(n[8]=[a("替代方案与框架")])),_:1,__:[8]})])])])])]),n[13]||(n[13]=o(`<p>在 Java 中发送邮件主要依赖 <strong>JavaMail API</strong> 标准库及其衍生框架<code>JavaMailSender</code>（Spring Framework），以下是核心技术栈和实现方式的详细介绍：</p><h2 id="核心技术标准-javamail-api" tabindex="-1"><a class="header-anchor" href="#核心技术标准-javamail-api"><span>核心技术标准：JavaMail API</span></a></h2><p>JavaMail API 是发送和接收电子邮件的官方标准，支持 SMTP（发送）、POP3/IMAP（接收）等协议，主要包含以下核心组件：</p><table><thead><tr><th>组件类</th><th>功能描述</th></tr></thead><tbody><tr><td><code>Session</code></td><td>邮件会话上下文，存储服务器配置和认证信息，通过 <code>Session.getInstance()</code> 创建</td></tr><tr><td><code>Message</code></td><td>邮件消息抽象类，常用实现类 <code>MimeMessage</code> 支持复杂邮件结构</td></tr><tr><td><code>Transport</code></td><td>负责发送邮件的传输类，通过 <code>Transport.send(message)</code> 执行发送操作</td></tr><tr><td><code>Authenticator</code></td><td>抽象认证器，需重写 <code>getPasswordAuthentication()</code> 提供账号密码</td></tr><tr><td><code>MimeMultipart</code>/<code>MimeBodyPart</code></td><td>用于构建多部分邮件（文本+附件/HTML+图片等组合）</td></tr></tbody></table><h3 id="基础依赖配置" tabindex="-1"><a class="header-anchor" href="#基础依赖配置"><span>基础依赖配置</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.sun.mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.6.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!-- 兼容 Java 8+ --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="主流实现方式" tabindex="-1"><a class="header-anchor" href="#主流实现方式"><span>主流实现方式</span></a></h2><h3 id="原生-javamail-实现-适用于简单场景" tabindex="-1"><a class="header-anchor" href="#原生-javamail-实现-适用于简单场景"><span>原生 JavaMail 实现（适用于简单场景）</span></a></h3><h4 id="发送简单邮件" tabindex="-1"><a class="header-anchor" href="#发送简单邮件"><span>发送简单邮件</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">site<span class="token punctuation">.</span>zmyblog<span class="token punctuation">.</span>mail</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">InternetAddress</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span>internet<span class="token punctuation">.</span></span><span class="token class-name">MimeMessage</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Properties</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmailSenderExample</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 邮件服务器配置</span></span>
<span class="line">    <span class="token class-name">String</span> host <span class="token operator">=</span> <span class="token string">&quot;smtp.gmail.com&quot;</span><span class="token punctuation">;</span> <span class="token comment">// SMTP 服务器</span></span>
<span class="line">    <span class="token keyword">int</span> port <span class="token operator">=</span> <span class="token number">587</span><span class="token punctuation">;</span> <span class="token comment">// SMTP 端口</span></span>
<span class="line">    <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token string">&quot;your-email@gmail.com&quot;</span><span class="token punctuation">;</span><span class="token comment">// 发件人邮箱</span></span>
<span class="line">    <span class="token class-name">String</span> password <span class="token operator">=</span> <span class="token string">&quot;your-app-password&quot;</span><span class="token punctuation">;</span><span class="token comment">// 发件人邮箱密码</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 设置邮件属性</span></span>
<span class="line">        <span class="token class-name">Properties</span> props <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Properties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.auth&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 启用认证</span></span>
<span class="line">        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.starttls.enable&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 启用 TLS</span></span>
<span class="line">        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.host&quot;</span><span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// SMTP 服务器</span></span>
<span class="line">        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.port&quot;</span><span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// SMTP 端口</span></span>
<span class="line">        props<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.ssl.trust&quot;</span><span class="token punctuation">,</span> host<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        props<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;mail.smtp.ssl.protocols&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;TLSv1.2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 创建会话，为保证邮箱通道配置变更后立马生效,需每次创建新的Session</span></span>
<span class="line">        <span class="token class-name">Session</span> session <span class="token operator">=</span> <span class="token class-name">Session</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Authenticator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token annotation punctuation">@Override</span></span>
<span class="line">            <span class="token keyword">protected</span> <span class="token class-name">PasswordAuthentication</span> <span class="token function">getPasswordAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PasswordAuthentication</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 创建邮件消息</span></span>
<span class="line">            <span class="token class-name">Message</span> message <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessage</span><span class="token punctuation">(</span>session<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            message<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 发件人</span></span>
<span class="line">            message<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span><span class="token constant">TO</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;to@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 收件人</span></span>
<span class="line">            message<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span><span class="token constant">CC</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;cc@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 抄送人           </span></span>
<span class="line">            message<span class="token punctuation">.</span><span class="token function">setRecipient</span><span class="token punctuation">(</span><span class="token class-name">Message<span class="token punctuation">.</span>RecipientType</span><span class="token punctuation">.</span><span class="token constant">BCC</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">InternetAddress</span><span class="token punctuation">(</span><span class="token string">&quot;bcc@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 密送人</span></span>
<span class="line">            message<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">&quot;测试邮件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 邮件主题</span></span>
<span class="line">            message<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;这是一封测试邮件，请勿回复。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 邮件内容</span></span>
<span class="line"></span>
<span class="line">            <span class="token comment">// 发送邮件</span></span>
<span class="line">            <span class="token class-name">Transport</span><span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;邮件发送成功！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">MessagingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;邮件发送失败！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">EmailSenderExample</span> emailSender <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">EmailSenderExample</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        emailSender<span class="token punctuation">.</span><span class="token function">sendMail</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="复杂邮件构建" tabindex="-1"><a class="header-anchor" href="#复杂邮件构建"><span>复杂邮件构建</span></a></h4>`,11)),s("p",null,[n[10]||(n[10]=a("通过 MimeMultipart 可组合多种内容类型，参考")),t(l,{to:"/java/module/java_mail.html"},{default:p(()=>n[9]||(n[9]=[a("JavaMail")])),_:1,__:[9]}),n[11]||(n[11]=a("。"))]),n[14]||(n[14]=o(`<h3 id="spring-framework-集成-企业级开发首选" tabindex="-1"><a class="header-anchor" href="#spring-framework-集成-企业级开发首选"><span>Spring Framework 集成（企业级开发首选）</span></a></h3><p>Spring 提供 <code>JavaMailSender</code> 接口封装原生 API，简化配置和使用：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java"><pre><code><span class="line"><span class="token keyword">package</span> <span class="token namespace">site<span class="token punctuation">.</span>zmyblog<span class="token punctuation">.</span>mail</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token annotation punctuation">@Service</span></span>
<span class="line"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmailServiceExample</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation punctuation">@Autowired</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token class-name">JavaMailSender</span> mailSender<span class="token punctuation">;</span>  <span class="token comment">// Spring自动配置的发送器</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 发送HTML邮件</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendHtmlEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">MimeMessage</span> message <span class="token operator">=</span> mailSender<span class="token punctuation">.</span><span class="token function">createMimeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">MimeMessageHelper</span> helper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessageHelper</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token string">&quot;noreply@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 发件人</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token string">&quot;to@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 收件人</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setCc</span><span class="token punctuation">(</span><span class="token string">&quot;cc@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 抄送人</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setBcc</span><span class="token punctuation">(</span><span class="token string">&quot;bcc@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 密送人</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">&quot;测试邮件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 邮件主题</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;h1&gt;这是一封测试邮件，请勿回复。&lt;/h1&gt;&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 第二个参数true表示HTML内容</span></span>
<span class="line">        mailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 发送邮件</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 发送带附件的邮件</span></span>
<span class="line">    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendEmailWithAttachment</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">MimeMessage</span> message <span class="token operator">=</span> mailSender<span class="token punctuation">.</span><span class="token function">createMimeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">MimeMessageHelper</span> helper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessageHelper</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span><span class="token string">&quot;sender@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token string">&quot;to@example.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">&quot;测试邮件&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span><span class="token string">&quot;这是一封测试邮件，请勿回复。&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token class-name">FileSystemResource</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileSystemResource</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;test.pdf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        helper<span class="token punctuation">.</span><span class="token function">addAttachment</span><span class="token punctuation">(</span><span class="token string">&quot;附件名称.pdf&quot;</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 添加附件</span></span>
<span class="line">        mailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置文件（application.yml）：</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line"><span class="token key atrule">spring</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">mail</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">host</span><span class="token punctuation">:</span> smtp.qq.com</span>
<span class="line">    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">587</span></span>
<span class="line">    <span class="token key atrule">username</span><span class="token punctuation">:</span> your<span class="token punctuation">-</span>qq@qq.com</span>
<span class="line">    <span class="token key atrule">password</span><span class="token punctuation">:</span> your<span class="token punctuation">-</span>authorization<span class="token punctuation">-</span>code <span class="token comment"># QQ邮箱需使用授权码而非登录密码</span></span>
<span class="line">    <span class="token key atrule">properties</span><span class="token punctuation">:</span></span>
<span class="line">      <span class="token key atrule">mail.smtp.auth</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line">      <span class="token key atrule">mail.smtp.starttls.enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="关键技术点解析" tabindex="-1"><a class="header-anchor" href="#关键技术点解析"><span>关键技术点解析</span></a></h2><h3 id="邮件服务器配置差异" tabindex="-1"><a class="header-anchor" href="#邮件服务器配置差异"><span>邮件服务器配置差异</span></a></h3><p>不同邮箱服务商的 SMTP 配置不同，需特别注意：</p><table><thead><tr><th>邮箱类型</th><th>SMTP服务器</th><th>端口（TLS）</th><th>认证方式</th></tr></thead><tbody><tr><td>Gmail</td><td>smtp.gmail.com</td><td>587</td><td>应用专用密码</td></tr><tr><td>QQ邮箱</td><td>smtp.qq.com</td><td>587</td><td>授权码（需在邮箱设置中开启）</td></tr><tr><td>163邮箱</td><td>smtp.163.com</td><td>465</td><td>客户端授权密码</td></tr></tbody></table><h3 id="最佳实践与避坑指南" tabindex="-1"><a class="header-anchor" href="#最佳实践与避坑指南"><span>最佳实践与避坑指南</span></a></h3><ol><li><strong>安全存储凭证</strong>：避免硬编码密码，使用环境变量或配置中心（如 Spring Cloud Config）</li><li><strong>连接池优化</strong>：高并发场景下使用 <code>JavaMailSenderImpl</code> 配置连接池参数</li><li><strong>异常处理</strong>：区分认证失败（<code>AuthenticationFailedException</code>）、网络异常等错误类型</li><li><strong>编码规范</strong>：邮件主题和附件名需通过 <code>MimeUtility.encodeText()</code> 进行 MIME 编码</li><li><strong>测试策略</strong>：使用 GreenMail 等工具进行本地集成测试，避免依赖外部邮件服务器</li></ol><h3 id="替代方案与框架" tabindex="-1"><a class="header-anchor" href="#替代方案与框架"><span>替代方案与框架</span></a></h3><ul><li><strong>Apache Commons Email</strong>：简化原生 API 的封装库，减少样板代码</li><li><strong>Spring Boot Starter Mail</strong>：自动配置邮件发送器，适合 Spring 生态项目</li><li><strong>Jakarta Mail</strong>：JavaMail 的升级版（Java EE 迁移至 Eclipse 基金会后的名称），包路径变更为 <code>jakarta.mail</code></li></ul><p>根据项目需求选择合适的技术栈：简单工具类推荐原生 JavaMail，企业级应用首选 Spring 集成方案，微服务架构可考虑封装为独立邮件服务。</p>`,14))])}const g=i(r,[["render",m]]),h=JSON.parse('{"path":"/java/module/mail.html","title":"Java 邮件服务","lang":"zh-CN","frontmatter":{"title":"Java 邮件服务","date":"2025-07-25T05:39:50.137Z","category":["java","module","mail"],"tags":["java","module","mail"]},"git":{"updatedTime":1754642867000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":4,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"b2ec0058d9c52bcd768c04c96c8824ef5d82bbf4","time":1754642867000,"email":"3036190149@qq.com","author":"zhaomy","message":"Java目录移动"},{"hash":"d87e8ea6bf26bf9e438ec3026c558c50d6ec2eec","time":1753759696000,"email":"3036190149@qq.com","author":"zhaomy","message":"java邮件服务"},{"hash":"d668b90e8fb15bb6f843be610af27ba53114f648","time":1753758327000,"email":"3036190149@qq.com","author":"zhaomy","message":"1. java 邮件服务 2. create-post.js"},{"hash":"1316d4b3d5a01c7fa22d49bea6b9b83fd2b35d57","time":1753756582000,"email":"3036190149@qq.com","author":"zhaomy","message":"1. java邮件服务 2. package.json及命令"}]},"filePathRelative":"java/module/mail.md","excerpt":"\\n\\n<p>在 Java 中发送邮件主要依赖 <strong>JavaMail API</strong> 标准库及其衍生框架<code>JavaMailSender</code>（Spring Framework），以下是核心技术栈和实现方式的详细介绍：</p>\\n<h2>核心技术标准：JavaMail API</h2>\\n<p>JavaMail API 是发送和接收电子邮件的官方标准，支持 SMTP（发送）、POP3/IMAP（接收）等协议，主要包含以下核心组件：</p>\\n<table>\\n<thead>\\n<tr>\\n<th>组件类</th>\\n<th>功能描述</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><code>Session</code></td>\\n<td>邮件会话上下文，存储服务器配置和认证信息，通过 <code>Session.getInstance()</code> 创建</td>\\n</tr>\\n<tr>\\n<td><code>Message</code></td>\\n<td>邮件消息抽象类，常用实现类 <code>MimeMessage</code> 支持复杂邮件结构</td>\\n</tr>\\n<tr>\\n<td><code>Transport</code></td>\\n<td>负责发送邮件的传输类，通过 <code>Transport.send(message)</code> 执行发送操作</td>\\n</tr>\\n<tr>\\n<td><code>Authenticator</code></td>\\n<td>抽象认证器，需重写 <code>getPasswordAuthentication()</code> 提供账号密码</td>\\n</tr>\\n<tr>\\n<td><code>MimeMultipart</code>/<code>MimeBodyPart</code></td>\\n<td>用于构建多部分邮件（文本+附件/HTML+图片等组合）</td>\\n</tr>\\n</tbody>\\n</table>"}');export{g as comp,h as data};
