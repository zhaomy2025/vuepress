import{_ as n,c as i,a,d as o,e as d,w as l,r as s,o as h,b as r}from"./app-BaJBWwWi.js";const p={},b={class:"table-of-contents"};function c(m,t){const e=s("router-link");return h(),i("div",null,[t[9]||(t[9]=a("h1",{id:"mybatis-mybatis-plus注解",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#mybatis-mybatis-plus注解"},[a("span",null,"MyBatis/MyBatis-Plus注解")])],-1)),a("nav",b,[a("ul",null,[a("li",null,[d(e,{to:"#sql操作注解"},{default:l(()=>t[0]||(t[0]=[r("SQL操作注解")])),_:1,__:[0]})]),a("li",null,[d(e,{to:"#参数处理注解"},{default:l(()=>t[1]||(t[1]=[r("参数处理注解")])),_:1,__:[1]})]),a("li",null,[d(e,{to:"#结果映射注解"},{default:l(()=>t[2]||(t[2]=[r("结果映射注解")])),_:1,__:[2]})]),a("li",null,[d(e,{to:"#mapper接口相关注解"},{default:l(()=>t[3]||(t[3]=[r("Mapper接口相关注解")])),_:1,__:[3]})]),a("li",null,[d(e,{to:"#实体类注解"},{default:l(()=>t[4]||(t[4]=[r("实体类注解")])),_:1,__:[4]}),a("ul",null,[a("li",null,[d(e,{to:"#tablefield"},{default:l(()=>t[5]||(t[5]=[r("@TableField")])),_:1,__:[5]})])])]),a("li",null,[d(e,{to:"#条件构造器注解"},{default:l(()=>t[6]||(t[6]=[r("条件构造器注解")])),_:1,__:[6]})]),a("li",null,[d(e,{to:"#扩展功能注解"},{default:l(()=>t[7]||(t[7]=[r("扩展功能注解")])),_:1,__:[7]})]),a("li",null,[d(e,{to:"#mapperscan"},{default:l(()=>t[8]||(t[8]=[r("@MapperScan")])),_:1,__:[8]})])])]),t[10]||(t[10]=o('<h1 id="mybatis核心注解" tabindex="-1"><a class="header-anchor" href="#mybatis核心注解"><span>MyBatis核心注解</span></a></h1><h2 id="sql操作注解" tabindex="-1"><a class="header-anchor" href="#sql操作注解"><span>SQL操作注解</span></a></h2><table><thead><tr><th>@Select</th><th></th></tr></thead><tbody><tr><td>@Update</td><td></td></tr><tr><td>@Insert</td><td></td></tr><tr><td>@Delete</td><td></td></tr><tr><td>@Options</td><td></td></tr></tbody></table><h2 id="参数处理注解" tabindex="-1"><a class="header-anchor" href="#参数处理注解"><span>参数处理注解</span></a></h2><table><thead><tr><th>@Param</th><th></th></tr></thead><tbody><tr><td>@MapKey</td><td></td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="结果映射注解" tabindex="-1"><a class="header-anchor" href="#结果映射注解"><span>结果映射注解</span></a></h2><table><thead><tr><th>@Results</th><th></th></tr></thead><tbody><tr><td>@Result</td><td></td></tr><tr><td>@ResultMap</td><td></td></tr><tr><td></td><td></td></tr><tr><td></td><td></td></tr></tbody></table><h2 id="mapper接口相关注解" tabindex="-1"><a class="header-anchor" href="#mapper接口相关注解"><span>Mapper接口相关注解</span></a></h2><table><thead><tr><th>注解</th><th>所属框架</th><th>主要用途</th></tr></thead><tbody><tr><td><code>@Mapper</code></td><td>Mybatis原生</td><td>标记接口为 MyBatis 的 Mapper 接口</td></tr><tr><td><code>@MapperScan</code></td><td>Mybatis-Spring</td><td>批量扫描注册 Mapper 接口</td></tr></tbody></table><p>在接口类上添加了@Mapper，在编译之后会生成相应的接口实现类，这个注解就是用来映射<code>mapper.xml</code>文件的。使用@mapper后，不需要在spring配置中设置扫描地址，通过mapper.xml里面的namespace属性对应相关的mapper类，spring将动态的生成Bean后注入到ServiceImpl中。</p><p>注意：</p><ul><li>**在Dao层不要存在相同名字的接口，也就是在Dao不要写重载。**因为mapper文件是通过id与接口进行对应的，如果写了两个同名的接口，就会导致mapper文件映射出错。</li><li>如果想要每个接口都要变成实现类，那么需要在每个接口类上加上@Mapper注解，比较麻烦，解决这个问题用@MapperScan。</li></ul><h1 id="mybatis-plus增强注解" tabindex="-1"><a class="header-anchor" href="#mybatis-plus增强注解"><span>MyBatis-Plus增强注解</span></a></h1><h2 id="实体类注解" tabindex="-1"><a class="header-anchor" href="#实体类注解"><span>实体类注解</span></a></h2><table><thead><tr><th>@TableName</th><th></th><th></th></tr></thead><tbody><tr><td>@TableId</td><td></td><td></td></tr><tr><td>@TableField</td><td></td><td></td></tr><tr><td>@TableLogic</td><td></td><td></td></tr></tbody></table><h3 id="tablefield" tabindex="-1"><a class="header-anchor" href="#tablefield"><span>@TableField</span></a></h3><p>处理实体类字段与数据库表字段之间的映射关系</p><ol><li>字段映射配置<code>@TableField(&quot;db_column&quot;) </code></li><li>当实体字段名与数据库字段名不一致时使用</li><li>未配置时默认采用驼峰转下划线命名规则</li><li>排除非表字段<code>@TableField(exist = false) </code></li><li>用于实体类中的临时属性或计算字段</li><li>查询/更新时会自动忽略该字段</li><li>自动填充</li><li>插入时自动填充<code>@TableField(fill = FieldFill.INSERT)</code></li><li>更新时填充<code>@TableField(fill = FieldFill.UPDATE) </code></li><li>插入和更新时填充<code>@TableField(fill = FieldFill.INSERT_UPDATE)</code></li><li>字段验证</li><li><code>@TableField(condition = SqlCondition.LIKE)</code> 1. <code>LIKE</code> 2. <code>NOT_IN</code></li><li><code>@TableField(whereStrategy = FieldStrategy.NOT_EMPTY)</code> 1. <code>IGNORED</code> 2. <code>NOT_NULL</code> 3. <code>NOT_EMPTY</code></li><li>类型处理器</li><li><code>@TableField(typeHandler = BlobTypeHandler.class)</code>大字段处理</li></ol><h2 id="条件构造器注解" tabindex="-1"><a class="header-anchor" href="#条件构造器注解"><span>条件构造器注解</span></a></h2><table><thead><tr><th>@Select</th><th></th><th></th></tr></thead><tbody><tr><td>@Update</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h2 id="扩展功能注解" tabindex="-1"><a class="header-anchor" href="#扩展功能注解"><span>扩展功能注解</span></a></h2><table><thead><tr><th><strong>@KeySequence</strong></th><th></th><th></th></tr></thead><tbody><tr><td>@InterceptorIgnore</td><td></td><td></td></tr><tr><td></td><td></td><td></td></tr></tbody></table><h1 id="其他注解" tabindex="-1"><a class="header-anchor" href="#其他注解"><span>其他注解</span></a></h1><p>既不属于MyBatis注解，也不属于MyBatis-Plus注解，但在使用MyBatis/MyBatis-Plus时会用到的注解。</p><h2 id="mapperscan" tabindex="-1"><a class="header-anchor" href="#mapperscan"><span>@MapperScan</span></a></h2><p>添加在Springboot启动类上面，指定要变成实现类的接口所在的包，包下面的所有接口在编译之后都会生成相应的实现类。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>@Repository是Spring的注解，标注在Dao层接口上，作用是将接口的一个实现类交给Spring管理。</p><p>使用这个注解的前提是必须在启动类上添加@MapperScan(&quot;Mapper接口层路径&quot;) 注解，这个<code>@Repository</code>完全可以省略不写，也完全可以实现自动注入</p></div>',27))])}const u=n(p,[["render",c]]),f=JSON.parse('{"path":"/java/orm/mybatis-annotation.html","title":"MyBatis/MyBatis-Plus注解","lang":"zh-CN","frontmatter":{"title":"MyBatis/MyBatis-Plus注解","date":"2025-06-23T06:52:35.125Z","category":["framework","mybatis-annotation"],"tags":["framework","mybatis-annotation"]},"git":{"updatedTime":1754642867000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":3,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"b2ec0058d9c52bcd768c04c96c8824ef5d82bbf4","time":1754642867000,"email":"3036190149@qq.com","author":"zhaomy","message":"Java目录移动"},{"hash":"d72ca8e867076fb230331ac91b3c1b164a0e500f","time":1750750917000,"email":"3036190149@qq.com","author":"zhaomy","message":"1、java：json、MyBatis 2、Spring集成Oracle 3、源码解析 4、Markdown文件格式化：去除字体"},{"hash":"6d5eae914a088d19d1434bfdcb0cde6db26e6bae","time":1750728343000,"email":"3036190149@qq.com","author":"zhaomy","message":"1、MyBatis"}]},"filePathRelative":"java/orm/mybatis-annotation.md","excerpt":"\\n\\n<h1>MyBatis核心注解</h1>\\n<h2>SQL操作注解</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>@Select</th>\\n<th></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>@Update</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>@Insert</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>@Delete</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>@Options</td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>\\n<h2>参数处理注解</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>@Param</th>\\n<th></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>@MapKey</td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>"}');export{u as comp,f as data};
