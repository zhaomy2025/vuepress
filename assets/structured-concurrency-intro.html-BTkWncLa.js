import{_ as t,c as a,a as r,o as c}from"./app-DhQSeJGz.js";const o={};function n(m,e){return c(),a("div",null,e[0]||(e[0]=[r("p",null,"通过引入结构化并发 API 来简化并发编程。结构化并发将不同线程中运行的相关任务组视为单个工作单元，从而简化错误处理和取消，提高可靠性并增强可观测性。这是一个预览 API。",-1)]))}const u=t(o,[["render",n]]),i=JSON.parse('{"path":"/java/new-features/structured-concurrency-intro.html","title":"","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1757924168000,"contributors":[{"name":"zhaomy","username":"zhaomy","email":"3036190149@qq.com","commits":1,"url":"https://github.com/zhaomy"}],"changelog":[{"hash":"18f0d4a4f1d4c588016a7d0c04145c1731b60fee","time":1757924168000,"email":"3036190149@qq.com","author":"zhaomy","message":"java22新特性 &#x26; java23-25新特性修改"}]},"filePathRelative":"java/new-features/structured-concurrency-intro.md","excerpt":"<p>通过引入结构化并发 API 来简化并发编程。结构化并发将不同线程中运行的相关任务组视为单个工作单元，从而简化错误处理和取消，提高可靠性并增强可观测性。这是一个预览 API。</p>\\n"}');export{u as comp,i as data};
